// generated with ast extension for cup
// version 0.8
// 2/0/2021 18:4:17


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(ReturnType ReturnType);
    public void visit(OptionalMinusVar OptionalMinusVar);
    public void visit(GroupDeclList GroupDeclList);
    public void visit(Matched Matched);
    public void visit(TermList TermList);
    public void visit(OptionalMethodsList OptionalMethodsList);
    public void visit(OptionalSquareNewOp OptionalSquareNewOp);
    public void visit(Variable Variable);
    public void visit(StatementList StatementList);
    public void visit(FactorList FactorList);
    public void visit(CaseStatementList CaseStatementList);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConstVariable ConstVariable);
    public void visit(Factor Factor);
    public void visit(VarList VarList);
    public void visit(ConstList ConstList);
    public void visit(Condition Condition);
    public void visit(MulOp MulOp);
    public void visit(OptionalPrintParam OptionalPrintParam);
    public void visit(RelOp RelOp);
    public void visit(ActualParamList ActualParamList);
    public void visit(DesignatorPart DesignatorPart);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(OptionalSquare OptionalSquare);
    public void visit(Expr Expr);
    public void visit(Expr1 Expr1);
    public void visit(ConditionTermList ConditionTermList);
    public void visit(AddOp AddOp);
    public void visit(ActualPars ActualPars);
    public void visit(OptionalSecondCondtionVar OptionalSecondCondtionVar);
    public void visit(ExtendClassOption ExtendClassOption);
    public void visit(SpecifeIdentPart SpecifeIdentPart);
    public void visit(ConditionFact ConditionFact);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConditionFactList ConditionFactList);
    public void visit(OptioanalActualPars OptioanalActualPars);
    public void visit(SpecifeIdentPartList SpecifeIdentPartList);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(VarType VarType);
    public void visit(FormPars FormPars);
    public void visit(ConstType ConstType);
    public void visit(AssignOp AssignOp);
    public void visit(LessEqualOp LessEqualOp);
    public void visit(LessOp LessOp);
    public void visit(GreaterEqualOp GreaterEqualOp);
    public void visit(GreaterOp GreaterOp);
    public void visit(NotEqualOp NotEqualOp);
    public void visit(EqualOp EqualOp);
    public void visit(Modulo Modulo);
    public void visit(Divide Divide);
    public void visit(Multiply Multiply);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(Decrement Decrement);
    public void visit(Increment Increment);
    public void visit(MetodCall MetodCall);
    public void visit(AssignmentOp AssignmentOp);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ArrayMembeName ArrayMembeName);
    public void visit(ClassMemberName ClassMemberName);
    public void visit(NoPartList NoPartList);
    public void visit(IdentPartList IdentPartList);
    public void visit(Designator Designator);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(DoNotHaveActualPars DoNotHaveActualPars);
    public void visit(HaveActualPars HaveActualPars);
    public void visit(Actuals Actuals);
    public void visit(NewNonArrayVariable NewNonArrayVariable);
    public void visit(NewArrayVariable NewArrayVariable);
    public void visit(ExprFactor ExprFactor);
    public void visit(FuncCall FuncCall);
    public void visit(Var Var);
    public void visit(NewOperator NewOperator);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(DoNotHaveTermList DoNotHaveTermList);
    public void visit(HaveTermList HaveTermList);
    public void visit(Term Term);
    public void visit(EndTermList EndTermList);
    public void visit(TemList TemList);
    public void visit(DoNotHaveMinus DoNotHaveMinus);
    public void visit(HaveMinus HaveMinus);
    public void visit(ExprState ExprState);
    public void visit(BasicExp BasicExp);
    public void visit(TernarOp TernarOp);
    public void visit(SecondConditionVariable SecondConditionVariable);
    public void visit(VarCondition VarCondition);
    public void visit(StopConditionListAnd StopConditionListAnd);
    public void visit(ConditionListAnd ConditionListAnd);
    public void visit(ConditionsAnd ConditionsAnd);
    public void visit(StopConditionListOr StopConditionListOr);
    public void visit(ConditionListOr ConditionListOr);
    public void visit(ConditionnError ConditionnError);
    public void visit(Conditionn Conditionn);
    public void visit(NoAditionalParamPrint NoAditionalParamPrint);
    public void visit(AditionalParamPrint AditionalParamPrint);
    public void visit(CaseStatement CaseStatement);
    public void visit(StopCaseStatements StopCaseStatements);
    public void visit(CaseStatementsList CaseStatementsList);
    public void visit(SwithStmt SwithStmt);
    public void visit(MultipleStatement MultipleStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(BreakStmt BreakStmt);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(PrintStmt PrintStmt);
    public void visit(DoStatement DoStatement);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(Assignment Assignment);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(UnmatchedStmt UnmatchedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoArrayFormalParam NoArrayFormalParam);
    public void visit(ArrayFormalParam ArrayFormalParam);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(NoReturnType NoReturnType);
    public void visit(FunctionReturnType FunctionReturnType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(ErrorCommaVariable ErrorCommaVariable);
    public void visit(NoArrayVariable NoArrayVariable);
    public void visit(ArrrayVariable ArrrayVariable);
    public void visit(OneVar OneVar);
    public void visit(MultipleVariables MultipleVariables);
    public void visit(ErrorGlobalDecl ErrorGlobalDecl);
    public void visit(VarDeclOne VarDeclOne);
    public void visit(BooleanType BooleanType);
    public void visit(CharType CharType);
    public void visit(ConstVarType ConstVarType);
    public void visit(ConstVarAssignment ConstVarAssignment);
    public void visit(OneConst OneConst);
    public void visit(MultipleConst MultipleConst);
    public void visit(ConstDecl ConstDecl);
    public void visit(OptionalMethodsListDerived1 OptionalMethodsListDerived1);
    public void visit(ClassMethods ClassMethods);
    public void visit(NoExtensionClass NoExtensionClass);
    public void visit(ExtensionClass ExtensionClass);
    public void visit(ClassDefinition ClassDefinition);
    public void visit(VarDeclListDerived1 VarDeclListDerived1);
    public void visit(VariableDeclarationClassMembers VariableDeclarationClassMembers);
    public void visit(CLassDeclaration CLassDeclaration);
    public void visit(VariableDeclarationGlobalVariables VariableDeclarationGlobalVariables);
    public void visit(ConstDeclarationGlobalVariables ConstDeclarationGlobalVariables);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(GroupVarDeclarations GroupVarDeclarations);
    public void visit(Program Program);

}
