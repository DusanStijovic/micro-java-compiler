INFO  14:46:35,659 - Compiling source file: C:\Users\dusan\OneDrive - student.etf.bg.ac.rs\Documents\GitHub\MicroJava_Compiler\MJCompiler\test\program.mj
INFO  14:46:35,727 - #2 program
INFO  14:46:35,727 - #50 MJProgram
INFO  14:46:35,727 - #50 int
INFO  14:46:35,728 - #50 zzz
INFO  14:46:35,728 - #5 ;
INFO  14:46:35,728 - #3 {
INFO  14:46:35,729 - #13 void
INFO  14:46:35,729 - #50 main
INFO  14:46:35,730 - #6 (
INFO  14:46:35,730 - #7 )
INFO  14:46:35,731 - #3 {
INFO  14:46:35,732 - #14 if
INFO  14:46:35,733 - #6 (
INFO  14:46:35,733 - #50 a
INFO  14:46:35,735 - #33 ==
INFO  14:46:35,739 - #49 3
INFO  14:46:35,740 - #40 &&
INFO  14:46:35,740 - #50 b
INFO  14:46:35,740 - #33 ==
INFO  14:46:35,741 - #40 &&
ERROR 14:46:35,764 - 
Sintaksna greska na liniji 6
INFO  14:46:35,764 - #50 c
INFO  14:46:35,764 - #33 ==
INFO  14:46:35,764 - #49 4
ERROR 14:46:35,764 - Izvrsen oporavak u uslovu IF-a-2; u liniji 2
INFO  14:46:35,765 - #40 &&
INFO  14:46:35,766 - #50 d
INFO  14:46:35,766 - #33 ==
INFO  14:46:35,766 - #49 5
INFO  14:46:35,766 - #7 )
INFO  14:46:35,768 - #3 {
INFO  14:46:35,768 - #50 zzz
INFO  14:46:35,768 - #8 =
INFO  14:46:35,768 - #49 0
INFO  14:46:35,770 - #5 ;
INFO  14:46:35,773 - #4 }
INFO  14:46:35,774 - #15 else
INFO  14:46:35,775 - #14 if
INFO  14:46:35,775 - #6 (
INFO  14:46:35,775 - #50 duca
INFO  14:46:35,775 - #33 ==
INFO  14:46:35,775 - #49 5
INFO  14:46:35,775 - #41 ||
INFO  14:46:35,775 - #50 duca
INFO  14:46:35,775 - #33 ==
INFO  14:46:35,776 - #7 )
ERROR 14:46:35,776 - 
Sintaksna greska na liniji 9
INFO  14:46:35,776 - #3 {
INFO  14:46:35,776 - #50 zzz
INFO  14:46:35,776 - #8 =
ERROR 14:46:35,776 - Izvrsen oporavak u uslovu IF-a; u liniji 9
INFO  14:46:35,779 - #49 1
INFO  14:46:35,779 - #5 ;
INFO  14:46:35,779 - #4 }
INFO  14:46:35,779 - #15 else
INFO  14:46:35,779 - #3 {
INFO  14:46:35,779 - #50 zzz
INFO  14:46:35,779 - #8 =
INFO  14:46:35,779 - #49 2
INFO  14:46:35,780 - #5 ;
INFO  14:46:35,780 - #4 }
INFO  14:46:35,780 - #4 }
INFO  14:46:35,780 - #4 }
INFO  14:46:35,786 - Program(
 MJProgram
  GroupVarDeclarations(
    NoVarDecl(
    ) [NoVarDecl]
    VariableDeclarationGlobalVariables(
      VarDeclOne(
        Type(
         int
        ) [Type]
        OneVar(
          NoArrayVariable(
           zzz
          ) [NoArrayVariable]
        ) [OneVar]
      ) [VarDeclOne]
    ) [VariableDeclarationGlobalVariables]
  ) [GroupVarDeclarations]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      NoReturnType(
      ) [NoReturnType]
     main
      NoFormParam(
      ) [NoFormParam]
      VarDeclListDerived1(
      ) [VarDeclListDerived1]
      Statements(
        NoStmt(
        ) [NoStmt]
        MatchedStmt(
          MatchedStatement(
            Conditionn(
              ConditionsAnd(
                VarCondition(
                  BasicExp(
                    ExprState(
                      DoNotHaveMinus(
                      ) [DoNotHaveMinus]
                      Term(
                        Var(
                          Designator(
                           a
                            NoPartList(
                            ) [NoPartList]
                          ) [Designator]
                        ) [Var]
                        DoNotHaveTermList(
                        ) [DoNotHaveTermList]
                      ) [Term]
                      EndTermList(
                      ) [EndTermList]
                    ) [ExprState]
                  ) [BasicExp]
                  SecondConditionVariable(
                    EqualOp(
                    ) [EqualOp]
                    BasicExp(
                      ExprState(
                        DoNotHaveMinus(
                        ) [DoNotHaveMinus]
                        Term(
                          NumConst(
                           3
                          ) [NumConst]
                          DoNotHaveTermList(
                          ) [DoNotHaveTermList]
                        ) [Term]
                        EndTermList(
                        ) [EndTermList]
                      ) [ExprState]
                    ) [BasicExp]
                  ) [SecondConditionVariable]
                ) [VarCondition]
                ConditionListAnd(
                  ConditionListAnd(
                    ConditionnError2(
                    ) [ConditionnError2]
                    VarCondition(
                      BasicExp(
                        ExprState(
                          DoNotHaveMinus(
                          ) [DoNotHaveMinus]
                          Term(
                            Var(
                              Designator(
                               c
                                NoPartList(
                                ) [NoPartList]
                              ) [Designator]
                            ) [Var]
                            DoNotHaveTermList(
                            ) [DoNotHaveTermList]
                          ) [Term]
                          EndTermList(
                          ) [EndTermList]
                        ) [ExprState]
                      ) [BasicExp]
                      SecondConditionVariable(
                        EqualOp(
                        ) [EqualOp]
                        BasicExp(
                          ExprState(
                            DoNotHaveMinus(
                            ) [DoNotHaveMinus]
                            Term(
                              NumConst(
                               4
                              ) [NumConst]
                              DoNotHaveTermList(
                              ) [DoNotHaveTermList]
                            ) [Term]
                            EndTermList(
                            ) [EndTermList]
                          ) [ExprState]
                        ) [BasicExp]
                      ) [SecondConditionVariable]
                    ) [VarCondition]
                  ) [ConditionListAnd]
                  VarCondition(
                    BasicExp(
                      ExprState(
                        DoNotHaveMinus(
                        ) [DoNotHaveMinus]
                        Term(
                          Var(
                            Designator(
                             d
                              NoPartList(
                              ) [NoPartList]
                            ) [Designator]
                          ) [Var]
                          DoNotHaveTermList(
                          ) [DoNotHaveTermList]
                        ) [Term]
                        EndTermList(
                        ) [EndTermList]
                      ) [ExprState]
                    ) [BasicExp]
                    SecondConditionVariable(
                      EqualOp(
                      ) [EqualOp]
                      BasicExp(
                        ExprState(
                          DoNotHaveMinus(
                          ) [DoNotHaveMinus]
                          Term(
                            NumConst(
                             5
                            ) [NumConst]
                            DoNotHaveTermList(
                            ) [DoNotHaveTermList]
                          ) [Term]
                          EndTermList(
                          ) [EndTermList]
                        ) [ExprState]
                      ) [BasicExp]
                    ) [SecondConditionVariable]
                  ) [VarCondition]
                ) [ConditionListAnd]
              ) [ConditionsAnd]
              StopConditionListOr(
              ) [StopConditionListOr]
            ) [Conditionn]
            MultipleStatement(
              Statements(
                NoStmt(
                ) [NoStmt]
                MatchedStmt(
                  Assignment(
                    DesignatorStatement(
                      Designator(
                       zzz
                        NoPartList(
                        ) [NoPartList]
                      ) [Designator]
                      AssignmentOp(
                        AssignOp(
                        ) [AssignOp]
                        BasicExp(
                          ExprState(
                            DoNotHaveMinus(
                            ) [DoNotHaveMinus]
                            Term(
                              NumConst(
                               0
                              ) [NumConst]
                              DoNotHaveTermList(
                              ) [DoNotHaveTermList]
                            ) [Term]
                            EndTermList(
                            ) [EndTermList]
                          ) [ExprState]
                        ) [BasicExp]
                      ) [AssignmentOp]
                    ) [DesignatorStatement]
                  ) [Assignment]
                ) [MatchedStmt]
              ) [Statements]
            ) [MultipleStatement]
            MatchedStatement(
              ConditionnError(
              ) [ConditionnError]
              MultipleStatement(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  MatchedStmt(
                    Assignment(
                      DesignatorStatement(
                        Designator(
                         zzz
                          NoPartList(
                          ) [NoPartList]
                        ) [Designator]
                        AssignmentOp(
                          AssignOp(
                          ) [AssignOp]
                          BasicExp(
                            ExprState(
                              DoNotHaveMinus(
                              ) [DoNotHaveMinus]
                              Term(
                                NumConst(
                                 1
                                ) [NumConst]
                                DoNotHaveTermList(
                                ) [DoNotHaveTermList]
                              ) [Term]
                              EndTermList(
                              ) [EndTermList]
                            ) [ExprState]
                          ) [BasicExp]
                        ) [AssignmentOp]
                      ) [DesignatorStatement]
                    ) [Assignment]
                  ) [MatchedStmt]
                ) [Statements]
              ) [MultipleStatement]
              MultipleStatement(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  MatchedStmt(
                    Assignment(
                      DesignatorStatement(
                        Designator(
                         zzz
                          NoPartList(
                          ) [NoPartList]
                        ) [Designator]
                        AssignmentOp(
                          AssignOp(
                          ) [AssignOp]
                          BasicExp(
                            ExprState(
                              DoNotHaveMinus(
                              ) [DoNotHaveMinus]
                              Term(
                                NumConst(
                                 2
                                ) [NumConst]
                                DoNotHaveTermList(
                                ) [DoNotHaveTermList]
                              ) [Term]
                              EndTermList(
                              ) [EndTermList]
                            ) [ExprState]
                          ) [BasicExp]
                        ) [AssignmentOp]
                      ) [DesignatorStatement]
                    ) [Assignment]
                  ) [MatchedStmt]
                ) [Statements]
              ) [MultipleStatement]
            ) [MatchedStatement]
          ) [MatchedStatement]
        ) [MatchedStmt]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  14:46:35,786 - ===================================
