INFO  17:07:22,676 - Compiling source file: C:\Users\sd170145d\OneDrive - student.etf.bg.ac.rs\Softversko Inzenjerstvo\Forth year\Seventh semester\PP1\projekat\workspace\MJCompiler\test\program.mj
INFO  17:07:22,687 - #1 program
INFO  17:07:22,688 - #4 p
INFO  17:07:22,688 - #22 const
INFO  17:07:22,688 - #4 int
INFO  17:07:22,688 - #4 size
INFO  17:07:22,688 - #7 =
INFO  17:07:22,688 - #5 10
INFO  17:07:22,688 - #9 ;
INFO  17:07:22,688 - #19 class
INFO  17:07:22,688 - #4 Table
INFO  17:07:22,688 - #12 {
INFO  17:07:22,688 - #4 int
INFO  17:07:22,688 - #4 pos
INFO  17:07:22,688 - #47 [
INFO  17:07:22,688 - #48 ]
INFO  17:07:22,688 - #8 ,
INFO  17:07:22,688 - #4 neg
INFO  17:07:22,688 - #47 [
INFO  17:07:22,688 - #48 ]
INFO  17:07:22,690 - #9 ;
INFO  17:07:22,690 - #12 {
INFO  17:07:22,690 - #15 void
INFO  17:07:22,690 - #4 putp
INFO  17:07:22,691 - #10 (
INFO  17:07:22,691 - #4 int
INFO  17:07:22,691 - #4 a
INFO  17:07:22,691 - #8 ,
INFO  17:07:22,691 - #4 int
INFO  17:07:22,691 - #4 idx
INFO  17:07:22,691 - #11 )
INFO  17:07:22,691 - #12 {
INFO  17:07:22,691 - #4 this
INFO  17:07:22,691 - #46 .
INFO  17:07:22,691 - #4 pos
INFO  17:07:22,691 - #47 [
INFO  17:07:22,691 - #4 idx
INFO  17:07:22,691 - #48 ]
INFO  17:07:22,691 - #7 =
INFO  17:07:22,691 - #4 a
INFO  17:07:22,691 - #9 ;
INFO  17:07:22,692 - #13 }
INFO  17:07:22,692 - #15 void
INFO  17:07:22,692 - #4 putn
INFO  17:07:22,692 - #10 (
INFO  17:07:22,692 - #4 int
INFO  17:07:22,692 - #4 a
INFO  17:07:22,692 - #8 ,
INFO  17:07:22,692 - #4 int
INFO  17:07:22,692 - #4 idx
INFO  17:07:22,692 - #11 )
INFO  17:07:22,692 - #12 {
INFO  17:07:22,692 - #4 this
INFO  17:07:22,692 - #46 .
INFO  17:07:22,692 - #4 neg
INFO  17:07:22,693 - #47 [
INFO  17:07:22,693 - #4 idx
INFO  17:07:22,693 - #48 ]
INFO  17:07:22,693 - #7 =
INFO  17:07:22,693 - #4 a
INFO  17:07:22,693 - #9 ;
INFO  17:07:22,693 - #13 }
INFO  17:07:22,693 - #4 int
INFO  17:07:22,693 - #4 getp
INFO  17:07:22,693 - #10 (
INFO  17:07:22,693 - #4 int
INFO  17:07:22,693 - #4 idx
INFO  17:07:22,693 - #11 )
INFO  17:07:22,694 - #12 {
INFO  17:07:22,694 - #3 return
INFO  17:07:22,694 - #4 pos
INFO  17:07:22,694 - #47 [
INFO  17:07:22,694 - #4 idx
INFO  17:07:22,694 - #48 ]
INFO  17:07:22,694 - #9 ;
INFO  17:07:22,694 - #13 }
INFO  17:07:22,694 - #4 int
INFO  17:07:22,694 - #4 getn
INFO  17:07:22,694 - #10 (
INFO  17:07:22,694 - #4 int
INFO  17:07:22,694 - #4 idx
INFO  17:07:22,694 - #11 )
INFO  17:07:22,695 - #12 {
INFO  17:07:22,695 - #3 return
INFO  17:07:22,695 - #4 neg
INFO  17:07:22,695 - #47 [
INFO  17:07:22,695 - #4 idx
INFO  17:07:22,695 - #48 ]
INFO  17:07:22,695 - #9 ;
INFO  17:07:22,695 - #13 }
INFO  17:07:22,695 - #13 }
INFO  17:07:22,695 - #13 }
INFO  17:07:22,695 - #4 Table
INFO  17:07:22,695 - #4 val
INFO  17:07:22,696 - #9 ;
INFO  17:07:22,696 - #12 {
INFO  17:07:22,696 - #15 void
INFO  17:07:22,696 - #4 f
INFO  17:07:22,696 - #10 (
INFO  17:07:22,696 - #4 char
INFO  17:07:22,696 - #4 ch
INFO  17:07:22,696 - #8 ,
INFO  17:07:22,696 - #4 int
INFO  17:07:22,696 - #4 a
INFO  17:07:22,696 - #8 ,
INFO  17:07:22,696 - #4 int
INFO  17:07:22,696 - #4 arg
INFO  17:07:22,697 - #11 )
INFO  17:07:22,697 - #4 int
INFO  17:07:22,697 - #4 x
INFO  17:07:22,697 - #9 ;
INFO  17:07:22,697 - #12 {
INFO  17:07:22,697 - #4 x
INFO  17:07:22,697 - #7 =
INFO  17:07:22,697 - #4 arg
INFO  17:07:22,697 - #9 ;
INFO  17:07:22,697 - #13 }
INFO  17:07:22,697 - #15 void
INFO  17:07:22,697 - #4 main
INFO  17:07:22,697 - #10 (
INFO  17:07:22,697 - #11 )
INFO  17:07:22,697 - #4 int
INFO  17:07:22,697 - #4 x
INFO  17:07:22,697 - #8 ,
INFO  17:07:22,697 - #4 i
INFO  17:07:22,697 - #9 ;
INFO  17:07:22,698 - #4 char
INFO  17:07:22,698 - #4 c
INFO  17:07:22,698 - #9 ;
INFO  17:07:22,698 - #12 {
INFO  17:07:22,698 - #4 val
INFO  17:07:22,698 - #7 =
INFO  17:07:22,698 - #27 new
INFO  17:07:22,698 - #4 Table
INFO  17:07:22,702 - #9 ;
INFO  17:07:22,702 - #4 val
INFO  17:07:22,702 - #46 .
INFO  17:07:22,702 - #4 pos
INFO  17:07:22,702 - #7 =
INFO  17:07:22,702 - #27 new
INFO  17:07:22,702 - #4 int
INFO  17:07:22,702 - #47 [
INFO  17:07:22,702 - #4 size
INFO  17:07:22,702 - #48 ]
INFO  17:07:22,702 - #9 ;
INFO  17:07:22,702 - #4 val
INFO  17:07:22,702 - #46 .
INFO  17:07:22,702 - #4 neg
INFO  17:07:22,702 - #7 =
INFO  17:07:22,703 - #27 new
INFO  17:07:22,703 - #4 int
INFO  17:07:22,703 - #47 [
INFO  17:07:22,703 - #4 size
INFO  17:07:22,703 - #48 ]
INFO  17:07:22,703 - #9 ;
INFO  17:07:22,703 - #4 i
INFO  17:07:22,703 - #7 =
INFO  17:07:22,703 - #5 0
INFO  17:07:22,703 - #9 ;
INFO  17:07:22,703 - #25 do
INFO  17:07:22,703 - #12 {
INFO  17:07:22,703 - #4 val
INFO  17:07:22,703 - #46 .
INFO  17:07:22,703 - #4 putp
INFO  17:07:22,703 - #10 (
INFO  17:07:22,703 - #5 0
INFO  17:07:22,703 - #8 ,
INFO  17:07:22,703 - #4 i
INFO  17:07:22,704 - #11 )
INFO  17:07:22,704 - #9 ;
INFO  17:07:22,704 - #4 val
INFO  17:07:22,704 - #46 .
INFO  17:07:22,704 - #4 putn
INFO  17:07:22,704 - #10 (
INFO  17:07:22,704 - #5 0
INFO  17:07:22,704 - #8 ,
INFO  17:07:22,704 - #4 i
INFO  17:07:22,704 - #11 )
INFO  17:07:22,704 - #9 ;
INFO  17:07:22,704 - #4 i
INFO  17:07:22,704 - #44 ++
INFO  17:07:22,704 - #9 ;
INFO  17:07:22,704 - #13 }
INFO  17:07:22,704 - #26 while
INFO  17:07:22,704 - #10 (
INFO  17:07:22,704 - #4 i
INFO  17:07:22,705 - #40 <
INFO  17:07:22,705 - #4 size
INFO  17:07:22,705 - #11 )
INFO  17:07:22,705 - #9 ;
INFO  17:07:22,705 - #4 f
INFO  17:07:22,705 - #10 (
INFO  17:07:22,705 - #4 c
INFO  17:07:22,705 - #8 ,
INFO  17:07:22,705 - #4 x
INFO  17:07:22,705 - #8 ,
INFO  17:07:22,705 - #4 i
INFO  17:07:22,705 - #11 )
INFO  17:07:22,705 - #9 ;
INFO  17:07:22,705 - #28 read
INFO  17:07:22,705 - #10 (
INFO  17:07:22,705 - #4 x
INFO  17:07:22,705 - #11 )
INFO  17:07:22,705 - #9 ;
INFO  17:07:22,705 - #17 true
INFO  17:07:22,705 - #25 do
INFO  17:07:22,706 - #12 {
INFO  17:07:22,706 - #23 if
INFO  17:07:22,706 - #10 (
INFO  17:07:22,706 - #4 x
INFO  17:07:22,706 - #41 <=
INFO  17:07:22,706 - #5 0
INFO  17:07:22,706 - #11 )
INFO  17:07:22,706 - #18 break
INFO  17:07:22,706 - #9 ;
INFO  17:07:22,706 - #23 if
INFO  17:07:22,706 - #10 (
INFO  17:07:22,706 - #5 0
INFO  17:07:22,706 - #41 <=
INFO  17:07:22,706 - #4 x
INFO  17:07:22,706 - #42 &&
INFO  17:07:22,706 - #4 x
INFO  17:07:22,706 - #40 <
INFO  17:07:22,706 - #4 size
INFO  17:07:22,706 - #11 )
INFO  17:07:22,706 - #12 {
INFO  17:07:22,706 - #4 val
INFO  17:07:22,706 - #46 .
INFO  17:07:22,706 - #4 putp
INFO  17:07:22,706 - #10 (
INFO  17:07:22,706 - #4 val
INFO  17:07:22,707 - #46 .
INFO  17:07:22,707 - #4 getp
INFO  17:07:22,707 - #10 (
INFO  17:07:22,707 - #4 x
INFO  17:07:22,707 - #11 )
INFO  17:07:22,707 - #6 +
INFO  17:07:22,707 - #5 1
INFO  17:07:22,707 - #11 )
INFO  17:07:22,707 - #9 ;
INFO  17:07:22,707 - #13 }
INFO  17:07:22,707 - #21 else
INFO  17:07:22,707 - #23 if
INFO  17:07:22,707 - #10 (
INFO  17:07:22,707 - #32 -
INFO  17:07:22,707 - #4 size
INFO  17:07:22,707 - #40 <
INFO  17:07:22,707 - #4 x
INFO  17:07:22,707 - #42 &&
INFO  17:07:22,707 - #4 x
INFO  17:07:22,707 - #40 <
INFO  17:07:22,707 - #5 0
INFO  17:07:22,707 - #11 )
INFO  17:07:22,707 - #12 {
INFO  17:07:22,707 - #4 val
INFO  17:07:22,708 - #46 .
INFO  17:07:22,708 - #4 putn
INFO  17:07:22,708 - #10 (
INFO  17:07:22,708 - #4 val
INFO  17:07:22,708 - #46 .
INFO  17:07:22,708 - #4 getn
INFO  17:07:22,708 - #10 (
INFO  17:07:22,708 - #32 -
INFO  17:07:22,708 - #4 x
INFO  17:07:22,708 - #11 )
INFO  17:07:22,708 - #6 +
INFO  17:07:22,708 - #5 1
INFO  17:07:22,708 - #11 )
INFO  17:07:22,709 - #9 ;
INFO  17:07:22,709 - #13 }
INFO  17:07:22,709 - #28 read
INFO  17:07:22,709 - #10 (
INFO  17:07:22,709 - #4 x
INFO  17:07:22,709 - #11 )
INFO  17:07:22,709 - #9 ;
INFO  17:07:22,709 - #13 }
INFO  17:07:22,709 - #26 while
INFO  17:07:22,709 - #10 (
INFO  17:07:22,709 - #17 true
INFO  17:07:22,709 - #11 )
INFO  17:07:22,709 - #9 ;
INFO  17:07:22,709 - #2 print
INFO  17:07:22,709 - #10 (
INFO  17:07:22,709 - #4 x
INFO  17:07:22,709 - #40 <
INFO  17:07:22,710 - #5 0
INFO  17:07:22,710 - #49 ?
INFO  17:07:22,710 - #16 a
INFO  17:07:22,710 - #50 :
INFO  17:07:22,710 - #16 b
INFO  17:07:22,710 - #11 )
INFO  17:07:22,710 - #9 ;
INFO  17:07:22,710 - #13 }
INFO  17:07:22,710 - #13 }
