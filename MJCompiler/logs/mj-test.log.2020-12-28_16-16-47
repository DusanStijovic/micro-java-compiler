INFO  16:16:41,000 - Compiling source file: C:\Users\dusan\OneDrive - student.etf.bg.ac.rs\Documents\GitHub\MicroJava_Compiler\MJCompiler\test\program.mj
INFO  16:16:41,008 - #1 program
INFO  16:16:41,009 - #4 Program
INFO  16:16:41,009 - #19 class
INFO  16:16:41,009 - #4 A
INFO  16:16:41,009 - #12 {
INFO  16:16:41,009 - #4 int
INFO  16:16:41,010 - #4 x
INFO  16:16:41,010 - #47 [
INFO  16:16:41,010 - #48 ]
INFO  16:16:41,011 - #8 ,
INFO  16:16:41,013 - #4 y
INFO  16:16:41,018 - #47 [
INFO  16:16:41,025 - #48 ]
INFO  16:16:41,031 - #9 ;
INFO  16:16:41,033 - #13 }
INFO  16:16:41,035 - #22 const
INFO  16:16:41,038 - #4 int
INFO  16:16:41,038 - #4 pi
INFO  16:16:41,039 - #7 =
INFO  16:16:41,042 - #5 3
INFO  16:16:41,044 - #8 ,
INFO  16:16:41,048 - #4 e
INFO  16:16:41,049 - #7 =
INFO  16:16:41,050 - #5 2
INFO  16:16:41,052 - #9 ;
INFO  16:16:41,054 - #19 class
INFO  16:16:41,058 - #4 B
INFO  16:16:41,059 - #29 extends
INFO  16:16:41,060 - #4 A
INFO  16:16:41,060 - #12 {
INFO  16:16:41,061 - #4 int
INFO  16:16:41,062 - #4 i
INFO  16:16:41,062 - #9 ;
INFO  16:16:41,063 - #12 {
INFO  16:16:41,064 - #4 int
INFO  16:16:41,064 - #4 getValue
INFO  16:16:41,064 - #10 (
INFO  16:16:41,065 - #4 int
INFO  16:16:41,066 - #4 a
INFO  16:16:41,066 - #11 )
INFO  16:16:41,066 - #4 int
INFO  16:16:41,068 - #4 b
INFO  16:16:41,068 - #9 ;
INFO  16:16:41,069 - #4 bool
INFO  16:16:41,069 - #4 c
INFO  16:16:41,070 - #9 ;
INFO  16:16:41,070 - #12 {
INFO  16:16:41,071 - #3 return
INFO  16:16:41,071 - #4 this
INFO  16:16:41,072 - #46 .
INFO  16:16:41,072 - #4 i
INFO  16:16:41,073 - #6 +
INFO  16:16:41,074 - #4 this
INFO  16:16:41,075 - #46 .
INFO  16:16:41,075 - #4 x
INFO  16:16:41,076 - #47 [
INFO  16:16:41,078 - #5 0
INFO  16:16:41,081 - #48 ]
INFO  16:16:41,081 - #6 +
INFO  16:16:41,082 - #4 a
INFO  16:16:41,082 - #9 ;
INFO  16:16:41,083 - #13 }
INFO  16:16:41,083 - #15 void
INFO  16:16:41,083 - #4 m
INFO  16:16:41,084 - #10 (
INFO  16:16:41,085 - #11 )
INFO  16:16:41,085 - #12 {
INFO  16:16:41,086 - #13 }
INFO  16:16:41,086 - #13 }
INFO  16:16:41,087 - #13 }
INFO  16:16:41,087 - #19 class
INFO  16:16:41,088 - #4 C
INFO  16:16:41,088 - #29 extends
INFO  16:16:41,089 - #4 B
INFO  16:16:41,089 - #12 {
INFO  16:16:41,089 - #4 A
INFO  16:16:41,090 - #4 theA
INFO  16:16:41,090 - #9 ;
INFO  16:16:41,090 - #4 int
INFO  16:16:41,091 - #4 a
INFO  16:16:41,091 - #9 ;
INFO  16:16:41,091 - #13 }
INFO  16:16:41,092 - #12 {
INFO  16:16:41,092 - #15 void
INFO  16:16:41,092 - #4 main
INFO  16:16:41,092 - #10 (
INFO  16:16:41,093 - #11 )
INFO  16:16:41,093 - #4 A
INFO  16:16:41,093 - #4 a
INFO  16:16:41,093 - #9 ;
INFO  16:16:41,094 - #4 C
INFO  16:16:41,094 - #4 c
INFO  16:16:41,095 - #9 ;
INFO  16:16:41,095 - #4 int
INFO  16:16:41,096 - #4 i
INFO  16:16:41,096 - #9 ;
INFO  16:16:41,096 - #4 int
INFO  16:16:41,097 - #4 x
INFO  16:16:41,097 - #47 [
INFO  16:16:41,098 - #48 ]
INFO  16:16:41,098 - #9 ;
INFO  16:16:41,099 - #4 char
INFO  16:16:41,100 - #4 ch
INFO  16:16:41,100 - #9 ;
INFO  16:16:41,101 - #12 {
INFO  16:16:41,101 - #4 a
INFO  16:16:41,102 - #7 =
INFO  16:16:41,103 - #27 new
INFO  16:16:41,103 - #4 A
INFO  16:16:41,104 - #9 ;
INFO  16:16:41,104 - #4 a
INFO  16:16:41,105 - #46 .
INFO  16:16:41,105 - #4 x
INFO  16:16:41,106 - #7 =
INFO  16:16:41,106 - #27 new
INFO  16:16:41,107 - #4 int
INFO  16:16:41,107 - #47 [
INFO  16:16:41,108 - #5 5
INFO  16:16:41,109 - #48 ]
INFO  16:16:41,112 - #9 ;
INFO  16:16:41,114 - #4 a
INFO  16:16:41,117 - #46 .
INFO  16:16:41,118 - #4 y
INFO  16:16:41,120 - #7 =
INFO  16:16:41,121 - #27 new
INFO  16:16:41,122 - #4 int
INFO  16:16:41,122 - #47 [
INFO  16:16:41,123 - #5 5
INFO  16:16:41,123 - #48 ]
INFO  16:16:41,124 - #9 ;
INFO  16:16:41,125 - #4 c
INFO  16:16:41,127 - #7 =
INFO  16:16:41,128 - #27 new
INFO  16:16:41,128 - #4 C
INFO  16:16:41,129 - #9 ;
INFO  16:16:41,129 - #4 c
INFO  16:16:41,130 - #46 .
INFO  16:16:41,130 - #4 theA
INFO  16:16:41,131 - #7 =
INFO  16:16:41,131 - #4 a
INFO  16:16:41,132 - #9 ;
INFO  16:16:41,132 - #4 c
INFO  16:16:41,133 - #46 .
INFO  16:16:41,133 - #4 x
INFO  16:16:41,134 - #7 =
INFO  16:16:41,134 - #27 new
INFO  16:16:41,135 - #4 int
INFO  16:16:41,135 - #47 [
INFO  16:16:41,136 - #5 5
INFO  16:16:41,136 - #48 ]
INFO  16:16:41,137 - #9 ;
INFO  16:16:41,137 - #4 x
INFO  16:16:41,137 - #7 =
INFO  16:16:41,138 - #27 new
INFO  16:16:41,139 - #4 int
INFO  16:16:41,139 - #47 [
INFO  16:16:41,140 - #5 3
INFO  16:16:41,140 - #48 ]
INFO  16:16:41,141 - #9 ;
INFO  16:16:41,142 - #28 read
INFO  16:16:41,142 - #10 (
INFO  16:16:41,143 - #4 c
INFO  16:16:41,144 - #46 .
INFO  16:16:41,144 - #4 i
INFO  16:16:41,145 - #11 )
INFO  16:16:41,145 - #9 ;
INFO  16:16:41,146 - #4 i
INFO  16:16:41,146 - #7 =
INFO  16:16:41,147 - #5 0
INFO  16:16:41,147 - #9 ;
INFO  16:16:41,148 - #25 do
INFO  16:16:41,149 - #12 {
INFO  16:16:41,149 - #28 read
INFO  16:16:41,150 - #10 (
INFO  16:16:41,151 - #4 c
INFO  16:16:41,152 - #46 .
INFO  16:16:41,153 - #4 x
INFO  16:16:41,155 - #47 [
INFO  16:16:41,155 - #4 i
INFO  16:16:41,156 - #48 ]
INFO  16:16:41,157 - #11 )
INFO  16:16:41,157 - #9 ;
INFO  16:16:41,158 - #28 read
INFO  16:16:41,158 - #10 (
INFO  16:16:41,160 - #4 c
INFO  16:16:41,161 - #46 .
INFO  16:16:41,161 - #4 theA
INFO  16:16:41,161 - #46 .
INFO  16:16:41,161 - #4 x
INFO  16:16:41,162 - #47 [
INFO  16:16:41,162 - #4 i
INFO  16:16:41,162 - #48 ]
INFO  16:16:41,162 - #11 )
INFO  16:16:41,162 - #9 ;
INFO  16:16:41,163 - #4 i
INFO  16:16:41,163 - #44 ++
INFO  16:16:41,163 - #9 ;
INFO  16:16:41,163 - #13 }
INFO  16:16:41,164 - #26 while
INFO  16:16:41,164 - #10 (
INFO  16:16:41,164 - #4 i
INFO  16:16:41,164 - #40 <
INFO  16:16:41,165 - #5 5
INFO  16:16:41,165 - #11 )
INFO  16:16:41,165 - #9 ;
INFO  16:16:41,165 - #2 print
INFO  16:16:41,166 - #10 (
INFO  16:16:41,166 - #4 c
INFO  16:16:41,166 - #46 .
INFO  16:16:41,167 - #4 getValue
INFO  16:16:41,167 - #10 (
INFO  16:16:41,167 - #4 c
INFO  16:16:41,167 - #46 .
INFO  16:16:41,167 - #4 theA
INFO  16:16:41,168 - #46 .
INFO  16:16:41,168 - #4 x
INFO  16:16:41,168 - #47 [
INFO  16:16:41,168 - #5 0
INFO  16:16:41,169 - #48 ]
INFO  16:16:41,169 - #11 )
INFO  16:16:41,169 - #11 )
INFO  16:16:41,169 - #9 ;
INFO  16:16:41,169 - #4 c
INFO  16:16:41,170 - #46 .
INFO  16:16:41,170 - #4 m
INFO  16:16:41,170 - #10 (
INFO  16:16:41,170 - #11 )
INFO  16:16:41,170 - #9 ;
INFO  16:16:41,171 - #28 read
INFO  16:16:41,171 - #10 (
INFO  16:16:41,171 - #4 ch
INFO  16:16:41,171 - #11 )
INFO  16:16:41,172 - #9 ;
INFO  16:16:41,172 - #2 print
INFO  16:16:41,172 - #10 (
INFO  16:16:41,172 - #4 ch
INFO  16:16:41,172 - #36 ==
INFO  16:16:41,173 - #16 e
INFO  16:16:41,173 - #49 ?
INFO  16:16:41,173 - #4 e
INFO  16:16:41,173 - #50 :
INFO  16:16:41,174 - #4 pi
INFO  16:16:41,175 - #11 )
INFO  16:16:41,175 - #9 ;
INFO  16:16:41,175 - #13 }
INFO  16:16:41,175 - #13 }
INFO  16:16:41,176 - #36 ==
