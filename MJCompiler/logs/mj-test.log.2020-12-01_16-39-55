INFO  16:37:22,400 - Compiling source file: C:\Users\sd170145d\OneDrive - student.etf.bg.ac.rs\Softversko Inzenjerstvo\Forth year\Seventh semester\PP1\projekat\workspace\MJCompiler\test\program.mj
INFO  16:37:22,416 - #1 program
INFO  16:37:22,416 - #4 p
INFO  16:37:22,417 - #22 const
INFO  16:37:22,417 - #4 int
INFO  16:37:22,417 - #4 size
INFO  16:37:22,417 - #7 =
INFO  16:37:22,417 - #5 10
INFO  16:37:22,417 - #9 ;
INFO  16:37:22,417 - #19 class
INFO  16:37:22,417 - #4 Table
INFO  16:37:22,417 - #12 {
INFO  16:37:22,417 - #4 int
INFO  16:37:22,417 - #4 pos
INFO  16:37:22,418 - #47 [
INFO  16:37:22,418 - #48 ]
INFO  16:37:22,418 - #8 ,
INFO  16:37:22,418 - #4 neg
INFO  16:37:22,418 - #47 [
INFO  16:37:22,418 - #48 ]
INFO  16:37:22,418 - #9 ;
INFO  16:37:22,418 - #12 {
INFO  16:37:22,418 - #15 void
INFO  16:37:22,418 - #4 putp
INFO  16:37:22,419 - #10 (
INFO  16:37:22,419 - #4 int
INFO  16:37:22,419 - #4 a
INFO  16:37:22,419 - #8 ,
INFO  16:37:22,419 - #4 int
INFO  16:37:22,419 - #4 idx
INFO  16:37:22,419 - #11 )
INFO  16:37:22,419 - #12 {
INFO  16:37:22,419 - #4 this
INFO  16:37:22,419 - #46 .
INFO  16:37:22,419 - #4 pos
INFO  16:37:22,420 - #47 [
INFO  16:37:22,420 - #4 idx
INFO  16:37:22,420 - #48 ]
INFO  16:37:22,420 - #7 =
INFO  16:37:22,420 - #4 a
INFO  16:37:22,420 - #9 ;
INFO  16:37:22,420 - #13 }
INFO  16:37:22,420 - #15 void
INFO  16:37:22,420 - #4 putn
INFO  16:37:22,420 - #10 (
INFO  16:37:22,421 - #4 int
INFO  16:37:22,421 - #4 a
INFO  16:37:22,421 - #8 ,
INFO  16:37:22,421 - #4 int
INFO  16:37:22,421 - #4 idx
INFO  16:37:22,421 - #11 )
INFO  16:37:22,421 - #12 {
INFO  16:37:22,421 - #4 this
INFO  16:37:22,422 - #46 .
INFO  16:37:22,422 - #4 neg
INFO  16:37:22,423 - #47 [
INFO  16:37:22,423 - #4 idx
INFO  16:37:22,423 - #48 ]
INFO  16:37:22,423 - #7 =
INFO  16:37:22,424 - #4 a
INFO  16:37:22,424 - #9 ;
INFO  16:37:22,424 - #13 }
INFO  16:37:22,425 - #4 int
INFO  16:37:22,425 - #4 getp
INFO  16:37:22,426 - #10 (
INFO  16:37:22,426 - #4 int
INFO  16:37:22,426 - #4 idx
INFO  16:37:22,426 - #11 )
INFO  16:37:22,426 - #12 {
INFO  16:37:22,426 - #3 return
INFO  16:37:22,426 - #4 pos
INFO  16:37:22,426 - #47 [
INFO  16:37:22,426 - #4 idx
INFO  16:37:22,426 - #48 ]
INFO  16:37:22,426 - #9 ;
INFO  16:37:22,427 - #13 }
INFO  16:37:22,427 - #4 int
INFO  16:37:22,427 - #4 getn
INFO  16:37:22,427 - #10 (
INFO  16:37:22,427 - #4 int
INFO  16:37:22,427 - #4 idx
INFO  16:37:22,427 - #11 )
INFO  16:37:22,427 - #12 {
INFO  16:37:22,427 - #3 return
INFO  16:37:22,427 - #4 neg
INFO  16:37:22,427 - #47 [
INFO  16:37:22,427 - #4 idx
INFO  16:37:22,427 - #48 ]
INFO  16:37:22,427 - #9 ;
INFO  16:37:22,427 - #13 }
INFO  16:37:22,427 - #13 }
INFO  16:37:22,427 - #13 }
INFO  16:37:22,427 - #4 Table
INFO  16:37:22,428 - #4 val
INFO  16:37:22,428 - #9 ;
INFO  16:37:22,428 - #12 {
INFO  16:37:22,428 - #15 void
INFO  16:37:22,428 - #4 f
INFO  16:37:22,428 - #10 (
INFO  16:37:22,428 - #4 char
INFO  16:37:22,428 - #4 ch
INFO  16:37:22,428 - #8 ,
INFO  16:37:22,428 - #4 int
INFO  16:37:22,428 - #4 a
INFO  16:37:22,428 - #8 ,
INFO  16:37:22,428 - #4 int
INFO  16:37:22,428 - #4 arg
INFO  16:37:22,428 - #11 )
INFO  16:37:22,429 - #4 int
INFO  16:37:22,429 - #4 x
INFO  16:37:22,429 - #9 ;
INFO  16:37:22,429 - #12 {
INFO  16:37:22,429 - #4 x
INFO  16:37:22,429 - #7 =
INFO  16:37:22,429 - #4 arg
INFO  16:37:22,429 - #9 ;
INFO  16:37:22,429 - #13 }
INFO  16:37:22,429 - #15 void
INFO  16:37:22,429 - #4 main
INFO  16:37:22,429 - #10 (
INFO  16:37:22,429 - #11 )
INFO  16:37:22,429 - #4 int
INFO  16:37:22,429 - #4 x
INFO  16:37:22,429 - #8 ,
INFO  16:37:22,429 - #4 i
INFO  16:37:22,429 - #9 ;
INFO  16:37:22,429 - #4 char
INFO  16:37:22,429 - #4 c
INFO  16:37:22,430 - #9 ;
INFO  16:37:22,430 - #12 {
INFO  16:37:22,430 - #4 val
INFO  16:37:22,430 - #7 =
INFO  16:37:22,430 - #27 new
INFO  16:37:22,430 - #4 Table
INFO  16:37:22,435 - #9 ;
INFO  16:37:22,435 - #4 val
INFO  16:37:22,435 - #46 .
INFO  16:37:22,435 - #4 pos
INFO  16:37:22,435 - #7 =
INFO  16:37:22,436 - #27 new
INFO  16:37:22,436 - #4 int
INFO  16:37:22,436 - #47 [
INFO  16:37:22,436 - #4 size
INFO  16:37:22,436 - #48 ]
INFO  16:37:22,436 - #9 ;
INFO  16:37:22,436 - #4 val
INFO  16:37:22,436 - #46 .
INFO  16:37:22,436 - #4 neg
INFO  16:37:22,436 - #7 =
INFO  16:37:22,436 - #27 new
INFO  16:37:22,436 - #4 int
INFO  16:37:22,436 - #47 [
INFO  16:37:22,436 - #4 size
INFO  16:37:22,436 - #48 ]
INFO  16:37:22,436 - #9 ;
INFO  16:37:22,436 - #4 i
INFO  16:37:22,436 - #7 =
INFO  16:37:22,436 - #5 0
INFO  16:37:22,436 - #9 ;
INFO  16:37:22,436 - #25 do
INFO  16:37:22,436 - #12 {
INFO  16:37:22,436 - #4 val
INFO  16:37:22,437 - #46 .
INFO  16:37:22,437 - #4 putp
INFO  16:37:22,437 - #10 (
INFO  16:37:22,437 - #5 0
INFO  16:37:22,437 - #8 ,
INFO  16:37:22,437 - #4 i
INFO  16:37:22,437 - #11 )
INFO  16:37:22,437 - #9 ;
INFO  16:37:22,437 - #4 val
INFO  16:37:22,437 - #46 .
INFO  16:37:22,437 - #4 putn
INFO  16:37:22,437 - #10 (
INFO  16:37:22,437 - #5 0
INFO  16:37:22,437 - #8 ,
INFO  16:37:22,437 - #4 i
INFO  16:37:22,437 - #11 )
INFO  16:37:22,437 - #9 ;
INFO  16:37:22,437 - #4 i
INFO  16:37:22,437 - #44 ++
INFO  16:37:22,438 - #9 ;
INFO  16:37:22,438 - #13 }
INFO  16:37:22,438 - #26 while
INFO  16:37:22,438 - #10 (
INFO  16:37:22,438 - #4 i
INFO  16:37:22,438 - #40 <
INFO  16:37:22,438 - #4 size
INFO  16:37:22,438 - #11 )
INFO  16:37:22,438 - #9 ;
INFO  16:37:22,438 - #4 f
INFO  16:37:22,438 - #10 (
INFO  16:37:22,438 - #4 c
INFO  16:37:22,438 - #8 ,
INFO  16:37:22,438 - #4 x
INFO  16:37:22,438 - #8 ,
INFO  16:37:22,438 - #4 i
INFO  16:37:22,438 - #11 )
INFO  16:37:22,439 - #9 ;
INFO  16:37:22,439 - #28 read
INFO  16:37:22,439 - #10 (
INFO  16:37:22,439 - #4 x
INFO  16:37:22,439 - #11 )
INFO  16:37:22,439 - #9 ;
INFO  16:37:22,439 - #25 do
INFO  16:37:22,439 - #12 {
INFO  16:37:22,439 - #23 if
INFO  16:37:22,439 - #10 (
INFO  16:37:22,439 - #4 x
INFO  16:37:22,439 - #41 <=
INFO  16:37:22,439 - #5 0
INFO  16:37:22,439 - #11 )
INFO  16:37:22,439 - #18 break
INFO  16:37:22,439 - #9 ;
INFO  16:37:22,439 - #23 if
INFO  16:37:22,439 - #10 (
INFO  16:37:22,439 - #5 0
INFO  16:37:22,439 - #41 <=
INFO  16:37:22,439 - #4 x
INFO  16:37:22,439 - #42 &&
INFO  16:37:22,439 - #4 x
INFO  16:37:22,439 - #40 <
INFO  16:37:22,440 - #4 size
INFO  16:37:22,440 - #11 )
INFO  16:37:22,440 - #12 {
INFO  16:37:22,440 - #4 val
INFO  16:37:22,440 - #46 .
INFO  16:37:22,440 - #4 putp
INFO  16:37:22,440 - #10 (
INFO  16:37:22,440 - #4 val
INFO  16:37:22,440 - #46 .
INFO  16:37:22,440 - #4 getp
INFO  16:37:22,440 - #10 (
INFO  16:37:22,440 - #4 x
INFO  16:37:22,440 - #11 )
INFO  16:37:22,440 - #6 +
INFO  16:37:22,440 - #5 1
INFO  16:37:22,440 - #11 )
INFO  16:37:22,440 - #9 ;
INFO  16:37:22,440 - #13 }
INFO  16:37:22,440 - #21 else
INFO  16:37:22,440 - #23 if
INFO  16:37:22,440 - #10 (
INFO  16:37:22,441 - #4 size
INFO  16:37:22,441 - #40 <
INFO  16:37:22,441 - #4 x
INFO  16:37:22,441 - #42 &&
INFO  16:37:22,441 - #4 x
INFO  16:37:22,441 - #40 <
INFO  16:37:22,441 - #5 0
INFO  16:37:22,442 - #11 )
INFO  16:37:22,442 - #12 {
INFO  16:37:22,442 - #4 val
INFO  16:37:22,442 - #46 .
INFO  16:37:22,442 - #4 putn
INFO  16:37:22,442 - #10 (
INFO  16:37:22,442 - #4 val
INFO  16:37:22,442 - #46 .
INFO  16:37:22,442 - #4 getn
INFO  16:37:22,442 - #10 (
INFO  16:37:22,442 - #4 x
INFO  16:37:22,443 - #11 )
INFO  16:37:22,443 - #6 +
INFO  16:37:22,443 - #5 1
INFO  16:37:22,443 - #11 )
INFO  16:37:22,443 - #9 ;
INFO  16:37:22,443 - #13 }
INFO  16:37:22,443 - #28 read
INFO  16:37:22,443 - #10 (
INFO  16:37:22,443 - #4 x
INFO  16:37:22,443 - #11 )
INFO  16:37:22,443 - #9 ;
INFO  16:37:22,443 - #13 }
INFO  16:37:22,443 - #26 while
INFO  16:37:22,443 - #10 (
INFO  16:37:22,443 - #4 true
INFO  16:37:22,443 - #11 )
INFO  16:37:22,443 - #9 ;
INFO  16:37:22,443 - #2 print
INFO  16:37:22,443 - #10 (
INFO  16:37:22,443 - #4 x
INFO  16:37:22,443 - #40 <
INFO  16:37:22,443 - #5 0
INFO  16:37:22,443 - #49 ?
INFO  16:37:22,444 - #32 -
INFO  16:37:22,444 - #50 :
INFO  16:37:22,444 - #6 +
INFO  16:37:22,444 - #11 )
INFO  16:37:22,444 - #9 ;
INFO  16:37:22,444 - #13 }
INFO  16:37:22,444 - #13 }
