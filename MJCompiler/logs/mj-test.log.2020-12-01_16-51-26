INFO  16:42:42,523 - Compiling source file: C:\Users\sd170145d\OneDrive - student.etf.bg.ac.rs\Softversko Inzenjerstvo\Forth year\Seventh semester\PP1\projekat\workspace\MJCompiler\test\program.mj
INFO  16:42:42,533 - #1 program
INFO  16:42:42,533 - #4 p
INFO  16:42:42,533 - #22 const
INFO  16:42:42,533 - #4 int
INFO  16:42:42,533 - #4 size
INFO  16:42:42,533 - #7 =
INFO  16:42:42,533 - #5 10
INFO  16:42:42,533 - #9 ;
INFO  16:42:42,533 - #19 class
INFO  16:42:42,533 - #4 Table
INFO  16:42:42,534 - #12 {
INFO  16:42:42,534 - #4 int
INFO  16:42:42,534 - #4 pos
INFO  16:42:42,534 - #47 [
INFO  16:42:42,534 - #48 ]
INFO  16:42:42,534 - #8 ,
INFO  16:42:42,534 - #4 neg
INFO  16:42:42,534 - #47 [
INFO  16:42:42,534 - #48 ]
INFO  16:42:42,534 - #9 ;
INFO  16:42:42,534 - #12 {
INFO  16:42:42,534 - #15 void
INFO  16:42:42,534 - #4 putp
INFO  16:42:42,534 - #10 (
INFO  16:42:42,534 - #4 int
INFO  16:42:42,534 - #4 a
INFO  16:42:42,535 - #8 ,
INFO  16:42:42,535 - #4 int
INFO  16:42:42,535 - #4 idx
INFO  16:42:42,535 - #11 )
INFO  16:42:42,535 - #12 {
INFO  16:42:42,535 - #4 this
INFO  16:42:42,535 - #46 .
INFO  16:42:42,535 - #4 pos
INFO  16:42:42,535 - #47 [
INFO  16:42:42,535 - #4 idx
INFO  16:42:42,535 - #48 ]
INFO  16:42:42,535 - #7 =
INFO  16:42:42,535 - #4 a
INFO  16:42:42,535 - #9 ;
INFO  16:42:42,535 - #13 }
INFO  16:42:42,536 - #15 void
INFO  16:42:42,536 - #4 putn
INFO  16:42:42,536 - #10 (
INFO  16:42:42,536 - #4 int
INFO  16:42:42,536 - #4 a
INFO  16:42:42,536 - #8 ,
INFO  16:42:42,536 - #4 int
INFO  16:42:42,536 - #4 idx
INFO  16:42:42,536 - #11 )
INFO  16:42:42,536 - #12 {
INFO  16:42:42,536 - #4 this
INFO  16:42:42,537 - #46 .
INFO  16:42:42,537 - #4 neg
INFO  16:42:42,537 - #47 [
INFO  16:42:42,538 - #4 idx
INFO  16:42:42,538 - #48 ]
INFO  16:42:42,538 - #7 =
INFO  16:42:42,538 - #4 a
INFO  16:42:42,538 - #9 ;
INFO  16:42:42,538 - #13 }
INFO  16:42:42,538 - #4 int
INFO  16:42:42,538 - #4 getp
INFO  16:42:42,538 - #10 (
INFO  16:42:42,539 - #4 int
INFO  16:42:42,539 - #4 idx
INFO  16:42:42,539 - #11 )
INFO  16:42:42,539 - #12 {
INFO  16:42:42,539 - #3 return
INFO  16:42:42,539 - #4 pos
INFO  16:42:42,539 - #47 [
INFO  16:42:42,539 - #4 idx
INFO  16:42:42,539 - #48 ]
INFO  16:42:42,539 - #9 ;
INFO  16:42:42,539 - #13 }
INFO  16:42:42,539 - #4 int
INFO  16:42:42,539 - #4 getn
INFO  16:42:42,539 - #10 (
INFO  16:42:42,539 - #4 int
INFO  16:42:42,539 - #4 idx
INFO  16:42:42,539 - #11 )
INFO  16:42:42,539 - #12 {
INFO  16:42:42,539 - #3 return
INFO  16:42:42,539 - #4 neg
INFO  16:42:42,539 - #47 [
INFO  16:42:42,539 - #4 idx
INFO  16:42:42,539 - #48 ]
INFO  16:42:42,539 - #9 ;
INFO  16:42:42,540 - #13 }
INFO  16:42:42,540 - #13 }
INFO  16:42:42,540 - #13 }
INFO  16:42:42,540 - #4 Table
INFO  16:42:42,540 - #4 val
INFO  16:42:42,540 - #9 ;
INFO  16:42:42,540 - #12 {
INFO  16:42:42,540 - #15 void
INFO  16:42:42,540 - #4 f
INFO  16:42:42,540 - #10 (
INFO  16:42:42,540 - #4 char
INFO  16:42:42,540 - #4 ch
INFO  16:42:42,540 - #8 ,
INFO  16:42:42,540 - #4 int
INFO  16:42:42,541 - #4 a
INFO  16:42:42,541 - #8 ,
INFO  16:42:42,541 - #4 int
INFO  16:42:42,541 - #4 arg
INFO  16:42:42,541 - #11 )
INFO  16:42:42,541 - #4 int
INFO  16:42:42,541 - #4 x
INFO  16:42:42,541 - #9 ;
INFO  16:42:42,541 - #12 {
INFO  16:42:42,541 - #4 x
INFO  16:42:42,541 - #7 =
INFO  16:42:42,541 - #4 arg
INFO  16:42:42,541 - #9 ;
INFO  16:42:42,541 - #13 }
INFO  16:42:42,541 - #15 void
INFO  16:42:42,542 - #4 main
INFO  16:42:42,542 - #10 (
INFO  16:42:42,542 - #11 )
INFO  16:42:42,542 - #4 int
INFO  16:42:42,542 - #4 x
INFO  16:42:42,542 - #8 ,
INFO  16:42:42,542 - #4 i
INFO  16:42:42,542 - #9 ;
INFO  16:42:42,542 - #4 char
INFO  16:42:42,542 - #4 c
INFO  16:42:42,542 - #9 ;
INFO  16:42:42,542 - #12 {
INFO  16:42:42,543 - #4 val
INFO  16:42:42,543 - #7 =
INFO  16:42:42,543 - #27 new
INFO  16:42:42,543 - #4 Table
INFO  16:42:42,547 - #9 ;
INFO  16:42:42,547 - #4 val
INFO  16:42:42,547 - #46 .
INFO  16:42:42,547 - #4 pos
INFO  16:42:42,547 - #7 =
INFO  16:42:42,547 - #27 new
INFO  16:42:42,547 - #4 int
INFO  16:42:42,547 - #47 [
INFO  16:42:42,547 - #4 size
INFO  16:42:42,547 - #48 ]
INFO  16:42:42,547 - #9 ;
INFO  16:42:42,547 - #4 val
INFO  16:42:42,547 - #46 .
INFO  16:42:42,547 - #4 neg
INFO  16:42:42,547 - #7 =
INFO  16:42:42,547 - #27 new
INFO  16:42:42,547 - #4 int
INFO  16:42:42,547 - #47 [
INFO  16:42:42,547 - #4 size
INFO  16:42:42,548 - #48 ]
INFO  16:42:42,548 - #9 ;
INFO  16:42:42,548 - #4 i
INFO  16:42:42,548 - #7 =
INFO  16:42:42,548 - #5 0
INFO  16:42:42,548 - #9 ;
INFO  16:42:42,548 - #25 do
INFO  16:42:42,548 - #12 {
INFO  16:42:42,548 - #4 val
INFO  16:42:42,548 - #46 .
INFO  16:42:42,548 - #4 putp
INFO  16:42:42,548 - #10 (
INFO  16:42:42,548 - #5 0
INFO  16:42:42,548 - #8 ,
INFO  16:42:42,548 - #4 i
INFO  16:42:42,548 - #11 )
INFO  16:42:42,549 - #9 ;
INFO  16:42:42,549 - #4 val
INFO  16:42:42,549 - #46 .
INFO  16:42:42,549 - #4 putn
INFO  16:42:42,549 - #10 (
INFO  16:42:42,549 - #5 0
INFO  16:42:42,549 - #8 ,
INFO  16:42:42,549 - #4 i
INFO  16:42:42,549 - #11 )
INFO  16:42:42,549 - #9 ;
INFO  16:42:42,549 - #4 i
INFO  16:42:42,549 - #44 ++
INFO  16:42:42,549 - #9 ;
INFO  16:42:42,549 - #13 }
INFO  16:42:42,549 - #26 while
INFO  16:42:42,550 - #10 (
INFO  16:42:42,550 - #4 i
INFO  16:42:42,550 - #40 <
INFO  16:42:42,550 - #4 size
INFO  16:42:42,550 - #11 )
INFO  16:42:42,550 - #9 ;
INFO  16:42:42,550 - #4 f
INFO  16:42:42,550 - #10 (
INFO  16:42:42,550 - #4 c
INFO  16:42:42,550 - #8 ,
INFO  16:42:42,550 - #4 x
INFO  16:42:42,550 - #8 ,
INFO  16:42:42,550 - #4 i
INFO  16:42:42,550 - #11 )
INFO  16:42:42,550 - #9 ;
INFO  16:42:42,550 - #28 read
INFO  16:42:42,551 - #10 (
INFO  16:42:42,551 - #4 x
INFO  16:42:42,551 - #11 )
INFO  16:42:42,551 - #9 ;
INFO  16:42:42,551 - #4 true
INFO  16:42:42,551 - #25 do
INFO  16:42:42,551 - #12 {
INFO  16:42:42,551 - #23 if
INFO  16:42:42,551 - #10 (
INFO  16:42:42,551 - #4 x
INFO  16:42:42,551 - #41 <=
INFO  16:42:42,551 - #5 0
INFO  16:42:42,551 - #11 )
INFO  16:42:42,551 - #18 break
INFO  16:42:42,551 - #9 ;
INFO  16:42:42,551 - #23 if
INFO  16:42:42,551 - #10 (
INFO  16:42:42,552 - #5 0
INFO  16:42:42,552 - #41 <=
INFO  16:42:42,552 - #4 x
INFO  16:42:42,552 - #42 &&
INFO  16:42:42,552 - #4 x
INFO  16:42:42,552 - #40 <
INFO  16:42:42,552 - #4 size
INFO  16:42:42,552 - #11 )
INFO  16:42:42,552 - #12 {
INFO  16:42:42,552 - #4 val
INFO  16:42:42,552 - #46 .
INFO  16:42:42,552 - #4 putp
INFO  16:42:42,552 - #10 (
INFO  16:42:42,552 - #4 val
INFO  16:42:42,552 - #46 .
INFO  16:42:42,552 - #4 getp
INFO  16:42:42,552 - #10 (
INFO  16:42:42,552 - #4 x
INFO  16:42:42,552 - #11 )
INFO  16:42:42,552 - #6 +
INFO  16:42:42,552 - #5 1
INFO  16:42:42,552 - #11 )
INFO  16:42:42,552 - #9 ;
INFO  16:42:42,553 - #13 }
INFO  16:42:42,553 - #21 else
INFO  16:42:42,553 - #23 if
INFO  16:42:42,553 - #10 (
INFO  16:42:42,553 - #32 -
INFO  16:42:42,553 - #4 size
INFO  16:42:42,553 - #40 <
INFO  16:42:42,553 - #4 x
INFO  16:42:42,553 - #42 &&
INFO  16:42:42,553 - #4 x
INFO  16:42:42,553 - #40 <
INFO  16:42:42,553 - #5 0
INFO  16:42:42,553 - #11 )
INFO  16:42:42,553 - #12 {
INFO  16:42:42,553 - #4 val
INFO  16:42:42,553 - #46 .
INFO  16:42:42,553 - #4 putn
INFO  16:42:42,553 - #10 (
INFO  16:42:42,553 - #4 val
INFO  16:42:42,553 - #46 .
INFO  16:42:42,553 - #4 getn
INFO  16:42:42,553 - #10 (
INFO  16:42:42,553 - #32 -
INFO  16:42:42,554 - #4 x
INFO  16:42:42,554 - #11 )
INFO  16:42:42,554 - #6 +
INFO  16:42:42,554 - #5 1
INFO  16:42:42,554 - #11 )
INFO  16:42:42,554 - #9 ;
INFO  16:42:42,554 - #13 }
INFO  16:42:42,554 - #28 read
INFO  16:42:42,554 - #10 (
INFO  16:42:42,554 - #4 x
INFO  16:42:42,554 - #11 )
INFO  16:42:42,554 - #9 ;
INFO  16:42:42,554 - #13 }
INFO  16:42:42,554 - #26 while
INFO  16:42:42,554 - #10 (
INFO  16:42:42,554 - #4 true
INFO  16:42:42,554 - #11 )
INFO  16:42:42,554 - #9 ;
INFO  16:42:42,554 - #2 print
INFO  16:42:42,554 - #10 (
INFO  16:42:42,554 - #4 x
INFO  16:42:42,554 - #40 <
INFO  16:42:42,554 - #5 0
INFO  16:42:42,554 - #49 ?
INFO  16:42:42,554 - #32 -
INFO  16:42:42,554 - #50 :
INFO  16:42:42,554 - #6 +
INFO  16:42:42,554 - #11 )
INFO  16:42:42,554 - #9 ;
INFO  16:42:42,554 - #13 }
INFO  16:42:42,554 - #13 }
