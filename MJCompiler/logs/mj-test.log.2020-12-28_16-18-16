INFO  16:16:47,806 - Compiling source file: C:\Users\dusan\OneDrive - student.etf.bg.ac.rs\Documents\GitHub\MicroJava_Compiler\MJCompiler\test\program.mj
INFO  16:16:47,811 - #1 program
INFO  16:16:47,812 - #4 Program
INFO  16:16:47,812 - #19 class
INFO  16:16:47,812 - #4 A
INFO  16:16:47,812 - #12 {
INFO  16:16:47,812 - #4 int
INFO  16:16:47,812 - #4 x
INFO  16:16:47,813 - #47 [
INFO  16:16:47,813 - #48 ]
INFO  16:16:47,813 - #8 ,
INFO  16:16:47,814 - #4 y
INFO  16:16:47,815 - #47 [
INFO  16:16:47,816 - #48 ]
INFO  16:16:47,817 - #9 ;
INFO  16:16:47,818 - #13 }
INFO  16:16:47,818 - #22 const
INFO  16:16:47,819 - #4 int
INFO  16:16:47,819 - #4 pi
INFO  16:16:47,820 - #7 =
INFO  16:16:47,820 - #5 3
INFO  16:16:47,821 - #8 ,
INFO  16:16:47,822 - #4 e
INFO  16:16:47,822 - #7 =
INFO  16:16:47,822 - #5 2
INFO  16:16:47,823 - #9 ;
INFO  16:16:47,823 - #19 class
INFO  16:16:47,824 - #4 B
INFO  16:16:47,824 - #29 extends
INFO  16:16:47,824 - #4 A
INFO  16:16:47,825 - #12 {
INFO  16:16:47,825 - #4 int
INFO  16:16:47,826 - #4 i
INFO  16:16:47,826 - #9 ;
INFO  16:16:47,826 - #12 {
INFO  16:16:47,827 - #4 int
INFO  16:16:47,827 - #4 getValue
INFO  16:16:47,827 - #10 (
INFO  16:16:47,827 - #4 int
INFO  16:16:47,828 - #4 a
INFO  16:16:47,828 - #11 )
INFO  16:16:47,828 - #4 int
INFO  16:16:47,829 - #4 b
INFO  16:16:47,829 - #9 ;
INFO  16:16:47,829 - #4 bool
INFO  16:16:47,830 - #4 c
INFO  16:16:47,830 - #9 ;
INFO  16:16:47,831 - #12 {
INFO  16:16:47,831 - #3 return
INFO  16:16:47,832 - #4 this
INFO  16:16:47,832 - #46 .
INFO  16:16:47,833 - #4 i
INFO  16:16:47,833 - #6 +
INFO  16:16:47,833 - #4 this
INFO  16:16:47,833 - #46 .
INFO  16:16:47,834 - #4 x
INFO  16:16:47,834 - #47 [
INFO  16:16:47,834 - #5 0
INFO  16:16:47,834 - #48 ]
INFO  16:16:47,835 - #6 +
INFO  16:16:47,835 - #4 a
INFO  16:16:47,835 - #9 ;
INFO  16:16:47,835 - #13 }
INFO  16:16:47,835 - #15 void
INFO  16:16:47,836 - #4 m
INFO  16:16:47,836 - #10 (
INFO  16:16:47,836 - #11 )
INFO  16:16:47,836 - #12 {
INFO  16:16:47,837 - #13 }
INFO  16:16:47,837 - #13 }
INFO  16:16:47,837 - #13 }
INFO  16:16:47,837 - #19 class
INFO  16:16:47,837 - #4 C
INFO  16:16:47,837 - #29 extends
INFO  16:16:47,838 - #4 B
INFO  16:16:47,838 - #12 {
INFO  16:16:47,838 - #4 A
INFO  16:16:47,838 - #4 theA
INFO  16:16:47,838 - #9 ;
INFO  16:16:47,839 - #4 int
INFO  16:16:47,839 - #4 a
INFO  16:16:47,839 - #9 ;
INFO  16:16:47,840 - #13 }
INFO  16:16:47,840 - #12 {
INFO  16:16:47,840 - #15 void
INFO  16:16:47,840 - #4 main
INFO  16:16:47,840 - #10 (
INFO  16:16:47,841 - #11 )
INFO  16:16:47,841 - #4 A
INFO  16:16:47,841 - #4 a
INFO  16:16:47,841 - #9 ;
INFO  16:16:47,842 - #4 C
INFO  16:16:47,842 - #4 c
INFO  16:16:47,842 - #9 ;
INFO  16:16:47,842 - #4 int
INFO  16:16:47,843 - #4 i
INFO  16:16:47,843 - #9 ;
INFO  16:16:47,843 - #4 int
INFO  16:16:47,843 - #4 x
INFO  16:16:47,844 - #47 [
INFO  16:16:47,844 - #48 ]
INFO  16:16:47,844 - #9 ;
INFO  16:16:47,844 - #4 char
INFO  16:16:47,844 - #4 ch
INFO  16:16:47,845 - #9 ;
INFO  16:16:47,845 - #12 {
INFO  16:16:47,845 - #4 a
INFO  16:16:47,845 - #7 =
INFO  16:16:47,845 - #27 new
INFO  16:16:47,846 - #4 A
INFO  16:16:47,846 - #9 ;
INFO  16:16:47,846 - #4 a
INFO  16:16:47,846 - #46 .
INFO  16:16:47,846 - #4 x
INFO  16:16:47,847 - #7 =
INFO  16:16:47,847 - #27 new
INFO  16:16:47,847 - #4 int
INFO  16:16:47,848 - #47 [
INFO  16:16:47,848 - #5 5
INFO  16:16:47,848 - #48 ]
INFO  16:16:47,848 - #9 ;
INFO  16:16:47,849 - #4 a
INFO  16:16:47,849 - #46 .
INFO  16:16:47,849 - #4 y
INFO  16:16:47,849 - #7 =
INFO  16:16:47,849 - #27 new
INFO  16:16:47,850 - #4 int
INFO  16:16:47,850 - #47 [
INFO  16:16:47,850 - #5 5
INFO  16:16:47,850 - #48 ]
INFO  16:16:47,851 - #9 ;
INFO  16:16:47,851 - #4 c
INFO  16:16:47,851 - #7 =
INFO  16:16:47,852 - #27 new
INFO  16:16:47,852 - #4 C
INFO  16:16:47,852 - #9 ;
INFO  16:16:47,852 - #4 c
INFO  16:16:47,853 - #46 .
INFO  16:16:47,853 - #4 theA
INFO  16:16:47,853 - #7 =
INFO  16:16:47,853 - #4 a
INFO  16:16:47,853 - #9 ;
INFO  16:16:47,854 - #4 c
INFO  16:16:47,854 - #46 .
INFO  16:16:47,854 - #4 x
INFO  16:16:47,854 - #7 =
INFO  16:16:47,855 - #27 new
INFO  16:16:47,855 - #4 int
INFO  16:16:47,855 - #47 [
INFO  16:16:47,855 - #5 5
INFO  16:16:47,855 - #48 ]
INFO  16:16:47,856 - #9 ;
INFO  16:16:47,856 - #4 x
INFO  16:16:47,856 - #7 =
INFO  16:16:47,856 - #27 new
INFO  16:16:47,857 - #4 int
INFO  16:16:47,857 - #47 [
INFO  16:16:47,857 - #5 3
INFO  16:16:47,857 - #48 ]
INFO  16:16:47,857 - #9 ;
INFO  16:16:47,858 - #28 read
INFO  16:16:47,858 - #10 (
INFO  16:16:47,858 - #4 c
INFO  16:16:47,858 - #46 .
INFO  16:16:47,858 - #4 i
INFO  16:16:47,859 - #11 )
INFO  16:16:47,859 - #9 ;
INFO  16:16:47,859 - #4 i
INFO  16:16:47,859 - #7 =
INFO  16:16:47,860 - #5 0
INFO  16:16:47,860 - #9 ;
INFO  16:16:47,860 - #25 do
INFO  16:16:47,860 - #12 {
INFO  16:16:47,860 - #28 read
INFO  16:16:47,861 - #10 (
INFO  16:16:47,861 - #4 c
INFO  16:16:47,861 - #46 .
INFO  16:16:47,861 - #4 x
INFO  16:16:47,861 - #47 [
INFO  16:16:47,861 - #4 i
INFO  16:16:47,862 - #48 ]
INFO  16:16:47,862 - #11 )
INFO  16:16:47,862 - #9 ;
INFO  16:16:47,862 - #28 read
INFO  16:16:47,863 - #10 (
INFO  16:16:47,863 - #4 c
INFO  16:16:47,863 - #46 .
INFO  16:16:47,863 - #4 theA
INFO  16:16:47,863 - #46 .
INFO  16:16:47,864 - #4 x
INFO  16:16:47,864 - #47 [
INFO  16:16:47,864 - #4 i
INFO  16:16:47,864 - #48 ]
INFO  16:16:47,864 - #11 )
INFO  16:16:47,865 - #9 ;
INFO  16:16:47,865 - #4 i
INFO  16:16:47,865 - #44 ++
INFO  16:16:47,865 - #9 ;
INFO  16:16:47,866 - #13 }
INFO  16:16:47,866 - #26 while
INFO  16:16:47,866 - #10 (
INFO  16:16:47,866 - #4 i
INFO  16:16:47,866 - #40 <
INFO  16:16:47,867 - #5 5
INFO  16:16:47,867 - #11 )
INFO  16:16:47,867 - #9 ;
INFO  16:16:47,867 - #2 print
INFO  16:16:47,867 - #10 (
INFO  16:16:47,868 - #4 c
INFO  16:16:47,868 - #46 .
INFO  16:16:47,868 - #4 getValue
INFO  16:16:47,868 - #10 (
INFO  16:16:47,868 - #4 c
INFO  16:16:47,869 - #46 .
INFO  16:16:47,869 - #4 theA
INFO  16:16:47,869 - #46 .
INFO  16:16:47,869 - #4 x
INFO  16:16:47,869 - #47 [
INFO  16:16:47,870 - #5 0
INFO  16:16:47,870 - #48 ]
INFO  16:16:47,870 - #11 )
INFO  16:16:47,870 - #11 )
INFO  16:16:47,870 - #9 ;
INFO  16:16:47,871 - #4 c
INFO  16:16:47,871 - #46 .
INFO  16:16:47,871 - #4 m
INFO  16:16:47,871 - #10 (
INFO  16:16:47,871 - #11 )
INFO  16:16:47,871 - #9 ;
INFO  16:16:47,872 - #28 read
INFO  16:16:47,872 - #10 (
INFO  16:16:47,872 - #4 ch
INFO  16:16:47,872 - #11 )
INFO  16:16:47,872 - #9 ;
INFO  16:16:47,873 - #2 print
INFO  16:16:47,873 - #10 (
INFO  16:16:47,873 - #4 ch
INFO  16:16:47,873 - #36 ==
INFO  16:16:47,874 - #16 e
INFO  16:16:47,874 - #49 ?
INFO  16:16:47,874 - #4 e
INFO  16:16:47,874 - #50 :
INFO  16:16:47,874 - #4 pi
INFO  16:16:47,874 - #11 )
INFO  16:16:47,875 - #9 ;
INFO  16:16:47,875 - #13 }
INFO  16:16:47,875 - #13 }
INFO  16:16:47,875 - #7 =
