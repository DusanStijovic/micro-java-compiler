INFO  16:39:55,755 - Compiling source file: C:\Users\sd170145d\OneDrive - student.etf.bg.ac.rs\Softversko Inzenjerstvo\Forth year\Seventh semester\PP1\projekat\workspace\MJCompiler\test\program.mj
INFO  16:39:55,765 - #1 program
INFO  16:39:55,765 - #4 p
INFO  16:39:55,765 - #22 const
INFO  16:39:55,765 - #4 int
INFO  16:39:55,765 - #4 size
INFO  16:39:55,765 - #7 =
INFO  16:39:55,766 - #5 10
INFO  16:39:55,766 - #9 ;
INFO  16:39:55,766 - #19 class
INFO  16:39:55,766 - #4 Table
INFO  16:39:55,766 - #12 {
INFO  16:39:55,766 - #4 int
INFO  16:39:55,766 - #4 pos
INFO  16:39:55,766 - #47 [
INFO  16:39:55,766 - #48 ]
INFO  16:39:55,766 - #8 ,
INFO  16:39:55,766 - #4 neg
INFO  16:39:55,766 - #47 [
INFO  16:39:55,766 - #48 ]
INFO  16:39:55,767 - #9 ;
INFO  16:39:55,767 - #12 {
INFO  16:39:55,767 - #15 void
INFO  16:39:55,767 - #4 putp
INFO  16:39:55,767 - #10 (
INFO  16:39:55,767 - #4 int
INFO  16:39:55,767 - #4 a
INFO  16:39:55,767 - #8 ,
INFO  16:39:55,768 - #4 int
INFO  16:39:55,768 - #4 idx
INFO  16:39:55,768 - #11 )
INFO  16:39:55,768 - #12 {
INFO  16:39:55,768 - #4 this
INFO  16:39:55,768 - #46 .
INFO  16:39:55,768 - #4 pos
INFO  16:39:55,768 - #47 [
INFO  16:39:55,769 - #4 idx
INFO  16:39:55,769 - #48 ]
INFO  16:39:55,769 - #7 =
INFO  16:39:55,769 - #4 a
INFO  16:39:55,769 - #9 ;
INFO  16:39:55,769 - #13 }
INFO  16:39:55,769 - #15 void
INFO  16:39:55,769 - #4 putn
INFO  16:39:55,769 - #10 (
INFO  16:39:55,769 - #4 int
INFO  16:39:55,769 - #4 a
INFO  16:39:55,769 - #8 ,
INFO  16:39:55,770 - #4 int
INFO  16:39:55,770 - #4 idx
INFO  16:39:55,770 - #11 )
INFO  16:39:55,770 - #12 {
INFO  16:39:55,770 - #4 this
INFO  16:39:55,770 - #46 .
INFO  16:39:55,770 - #4 neg
INFO  16:39:55,770 - #47 [
INFO  16:39:55,770 - #4 idx
INFO  16:39:55,770 - #48 ]
INFO  16:39:55,770 - #7 =
INFO  16:39:55,770 - #4 a
INFO  16:39:55,770 - #9 ;
INFO  16:39:55,771 - #13 }
INFO  16:39:55,771 - #4 int
INFO  16:39:55,771 - #4 getp
INFO  16:39:55,771 - #10 (
INFO  16:39:55,771 - #4 int
INFO  16:39:55,771 - #4 idx
INFO  16:39:55,771 - #11 )
INFO  16:39:55,771 - #12 {
INFO  16:39:55,772 - #3 return
INFO  16:39:55,772 - #4 pos
INFO  16:39:55,772 - #47 [
INFO  16:39:55,772 - #4 idx
INFO  16:39:55,772 - #48 ]
INFO  16:39:55,772 - #9 ;
INFO  16:39:55,772 - #13 }
INFO  16:39:55,772 - #4 int
INFO  16:39:55,772 - #4 getn
INFO  16:39:55,772 - #10 (
INFO  16:39:55,772 - #4 int
INFO  16:39:55,772 - #4 idx
INFO  16:39:55,772 - #11 )
INFO  16:39:55,772 - #12 {
INFO  16:39:55,772 - #3 return
INFO  16:39:55,773 - #4 neg
INFO  16:39:55,773 - #47 [
INFO  16:39:55,773 - #4 idx
INFO  16:39:55,773 - #48 ]
INFO  16:39:55,773 - #9 ;
INFO  16:39:55,773 - #13 }
INFO  16:39:55,773 - #13 }
INFO  16:39:55,773 - #13 }
INFO  16:39:55,773 - #4 Table
INFO  16:39:55,773 - #4 val
INFO  16:39:55,773 - #9 ;
INFO  16:39:55,773 - #12 {
INFO  16:39:55,773 - #15 void
INFO  16:39:55,773 - #4 f
INFO  16:39:55,774 - #10 (
INFO  16:39:55,774 - #4 char
INFO  16:39:55,774 - #4 ch
INFO  16:39:55,774 - #8 ,
INFO  16:39:55,774 - #4 int
INFO  16:39:55,774 - #4 a
INFO  16:39:55,774 - #8 ,
INFO  16:39:55,774 - #4 int
INFO  16:39:55,774 - #4 arg
INFO  16:39:55,774 - #11 )
INFO  16:39:55,774 - #4 int
INFO  16:39:55,774 - #4 x
INFO  16:39:55,774 - #9 ;
INFO  16:39:55,774 - #12 {
INFO  16:39:55,775 - #4 x
INFO  16:39:55,775 - #7 =
INFO  16:39:55,775 - #4 arg
INFO  16:39:55,775 - #9 ;
INFO  16:39:55,775 - #13 }
INFO  16:39:55,775 - #15 void
INFO  16:39:55,775 - #4 main
INFO  16:39:55,775 - #10 (
INFO  16:39:55,775 - #11 )
INFO  16:39:55,775 - #4 int
INFO  16:39:55,775 - #4 x
INFO  16:39:55,775 - #8 ,
INFO  16:39:55,775 - #4 i
INFO  16:39:55,775 - #9 ;
INFO  16:39:55,776 - #4 char
INFO  16:39:55,776 - #4 c
INFO  16:39:55,776 - #9 ;
INFO  16:39:55,776 - #12 {
INFO  16:39:55,776 - #4 val
INFO  16:39:55,776 - #7 =
INFO  16:39:55,776 - #27 new
INFO  16:39:55,776 - #4 Table
INFO  16:39:55,780 - #9 ;
INFO  16:39:55,780 - #4 val
INFO  16:39:55,780 - #46 .
INFO  16:39:55,780 - #4 pos
INFO  16:39:55,780 - #7 =
INFO  16:39:55,780 - #27 new
INFO  16:39:55,780 - #4 int
INFO  16:39:55,780 - #47 [
INFO  16:39:55,780 - #4 size
INFO  16:39:55,780 - #48 ]
INFO  16:39:55,780 - #9 ;
INFO  16:39:55,780 - #4 val
INFO  16:39:55,780 - #46 .
INFO  16:39:55,780 - #4 neg
INFO  16:39:55,780 - #7 =
INFO  16:39:55,780 - #27 new
INFO  16:39:55,780 - #4 int
INFO  16:39:55,780 - #47 [
INFO  16:39:55,780 - #4 size
INFO  16:39:55,780 - #48 ]
INFO  16:39:55,780 - #9 ;
INFO  16:39:55,780 - #4 i
INFO  16:39:55,780 - #7 =
INFO  16:39:55,780 - #5 0
INFO  16:39:55,780 - #9 ;
INFO  16:39:55,781 - #25 do
INFO  16:39:55,781 - #12 {
INFO  16:39:55,781 - #4 val
INFO  16:39:55,781 - #46 .
INFO  16:39:55,781 - #4 putp
INFO  16:39:55,781 - #10 (
INFO  16:39:55,781 - #5 0
INFO  16:39:55,781 - #8 ,
INFO  16:39:55,781 - #4 i
INFO  16:39:55,781 - #11 )
INFO  16:39:55,781 - #9 ;
INFO  16:39:55,781 - #4 val
INFO  16:39:55,781 - #46 .
INFO  16:39:55,781 - #4 putn
INFO  16:39:55,781 - #10 (
INFO  16:39:55,781 - #5 0
INFO  16:39:55,782 - #8 ,
INFO  16:39:55,782 - #4 i
INFO  16:39:55,782 - #11 )
INFO  16:39:55,782 - #9 ;
INFO  16:39:55,782 - #4 i
INFO  16:39:55,782 - #44 ++
INFO  16:39:55,782 - #9 ;
INFO  16:39:55,782 - #13 }
INFO  16:39:55,782 - #26 while
INFO  16:39:55,782 - #10 (
INFO  16:39:55,782 - #4 i
INFO  16:39:55,782 - #40 <
INFO  16:39:55,782 - #4 size
INFO  16:39:55,782 - #11 )
INFO  16:39:55,782 - #9 ;
INFO  16:39:55,783 - #4 f
INFO  16:39:55,783 - #10 (
INFO  16:39:55,783 - #4 c
INFO  16:39:55,783 - #8 ,
INFO  16:39:55,783 - #4 x
INFO  16:39:55,783 - #8 ,
INFO  16:39:55,783 - #4 i
INFO  16:39:55,783 - #11 )
INFO  16:39:55,783 - #9 ;
INFO  16:39:55,783 - #28 read
INFO  16:39:55,783 - #10 (
INFO  16:39:55,783 - #4 x
INFO  16:39:55,783 - #11 )
INFO  16:39:55,783 - #9 ;
INFO  16:39:55,783 - #25 do
INFO  16:39:55,783 - #12 {
INFO  16:39:55,783 - #23 if
INFO  16:39:55,784 - #10 (
INFO  16:39:55,784 - #4 x
INFO  16:39:55,784 - #41 <=
INFO  16:39:55,784 - #5 0
INFO  16:39:55,784 - #11 )
INFO  16:39:55,784 - #18 break
INFO  16:39:55,784 - #9 ;
INFO  16:39:55,784 - #23 if
INFO  16:39:55,784 - #10 (
INFO  16:39:55,784 - #5 0
INFO  16:39:55,784 - #41 <=
INFO  16:39:55,784 - #4 x
INFO  16:39:55,784 - #42 &&
INFO  16:39:55,784 - #4 x
INFO  16:39:55,784 - #40 <
INFO  16:39:55,784 - #4 size
INFO  16:39:55,785 - #11 )
INFO  16:39:55,785 - #12 {
INFO  16:39:55,785 - #4 val
INFO  16:39:55,785 - #46 .
INFO  16:39:55,785 - #4 putp
INFO  16:39:55,785 - #10 (
INFO  16:39:55,785 - #4 val
INFO  16:39:55,785 - #46 .
INFO  16:39:55,785 - #4 getp
INFO  16:39:55,785 - #10 (
INFO  16:39:55,785 - #4 x
INFO  16:39:55,785 - #11 )
INFO  16:39:55,785 - #6 +
INFO  16:39:55,785 - #5 1
INFO  16:39:55,785 - #11 )
INFO  16:39:55,785 - #9 ;
INFO  16:39:55,785 - #13 }
INFO  16:39:55,785 - #21 else
INFO  16:39:55,785 - #23 if
INFO  16:39:55,785 - #10 (
INFO  16:39:55,785 - #32 -
INFO  16:39:55,785 - #4 size
INFO  16:39:55,785 - #40 <
INFO  16:39:55,785 - #4 x
INFO  16:39:55,785 - #42 &&
INFO  16:39:55,785 - #4 x
INFO  16:39:55,785 - #40 <
INFO  16:39:55,785 - #5 0
INFO  16:39:55,785 - #11 )
INFO  16:39:55,785 - #12 {
INFO  16:39:55,785 - #4 val
INFO  16:39:55,785 - #46 .
INFO  16:39:55,786 - #4 putn
INFO  16:39:55,786 - #10 (
INFO  16:39:55,786 - #4 val
INFO  16:39:55,786 - #46 .
INFO  16:39:55,786 - #4 getn
INFO  16:39:55,786 - #10 (
INFO  16:39:55,786 - #32 -
INFO  16:39:55,786 - #4 x
INFO  16:39:55,786 - #11 )
INFO  16:39:55,786 - #6 +
INFO  16:39:55,786 - #5 1
INFO  16:39:55,786 - #11 )
INFO  16:39:55,786 - #9 ;
INFO  16:39:55,787 - #13 }
INFO  16:39:55,787 - #28 read
INFO  16:39:55,787 - #10 (
INFO  16:39:55,787 - #4 x
INFO  16:39:55,787 - #11 )
INFO  16:39:55,787 - #9 ;
INFO  16:39:55,787 - #13 }
INFO  16:39:55,787 - #26 while
INFO  16:39:55,787 - #10 (
INFO  16:39:55,787 - #4 true
INFO  16:39:55,787 - #11 )
INFO  16:39:55,787 - #9 ;
INFO  16:39:55,787 - #2 print
INFO  16:39:55,787 - #10 (
INFO  16:39:55,787 - #4 x
INFO  16:39:55,787 - #40 <
INFO  16:39:55,787 - #5 0
INFO  16:39:55,788 - #49 ?
INFO  16:39:55,788 - #32 -
INFO  16:39:55,788 - #50 :
INFO  16:39:55,788 - #6 +
INFO  16:39:55,788 - #11 )
INFO  16:39:55,788 - #9 ;
INFO  16:39:55,788 - #13 }
INFO  16:39:55,788 - #13 }
