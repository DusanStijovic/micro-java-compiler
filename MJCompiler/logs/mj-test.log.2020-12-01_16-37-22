INFO  16:35:45,753 - Compiling source file: C:\Users\sd170145d\OneDrive - student.etf.bg.ac.rs\Softversko Inzenjerstvo\Forth year\Seventh semester\PP1\projekat\workspace\MJCompiler\test\program.mj
INFO  16:35:45,767 - #1 program
INFO  16:35:45,768 - #4 p
INFO  16:35:45,768 - #4 const
INFO  16:35:45,768 - #4 int
INFO  16:35:45,768 - #4 size
INFO  16:35:45,768 - #7 =
INFO  16:35:45,768 - #5 10
INFO  16:35:45,768 - #9 ;
INFO  16:35:45,768 - #4 class
INFO  16:35:45,768 - #4 Table
INFO  16:35:45,768 - #12 {
INFO  16:35:45,768 - #4 int
INFO  16:35:45,768 - #4 pos
INFO  16:35:45,769 - #8 ,
INFO  16:35:45,769 - #4 neg
INFO  16:35:45,769 - #9 ;
INFO  16:35:45,769 - #12 {
INFO  16:35:45,769 - #15 void
INFO  16:35:45,769 - #4 putp
INFO  16:35:45,770 - #10 (
INFO  16:35:45,770 - #4 int
INFO  16:35:45,770 - #4 a
INFO  16:35:45,770 - #8 ,
INFO  16:35:45,770 - #4 int
INFO  16:35:45,770 - #4 idx
INFO  16:35:45,770 - #11 )
INFO  16:35:45,770 - #12 {
INFO  16:35:45,770 - #4 this
INFO  16:35:45,770 - #4 pos
INFO  16:35:45,770 - #4 idx
INFO  16:35:45,771 - #7 =
INFO  16:35:45,771 - #4 a
INFO  16:35:45,771 - #9 ;
INFO  16:35:45,771 - #13 }
INFO  16:35:45,771 - #15 void
INFO  16:35:45,771 - #4 putn
INFO  16:35:45,771 - #10 (
INFO  16:35:45,771 - #4 int
INFO  16:35:45,771 - #4 a
INFO  16:35:45,772 - #8 ,
INFO  16:35:45,772 - #4 int
INFO  16:35:45,772 - #4 idx
INFO  16:35:45,772 - #11 )
INFO  16:35:45,772 - #12 {
INFO  16:35:45,772 - #4 this
INFO  16:35:45,773 - #4 neg
INFO  16:35:45,773 - #4 idx
INFO  16:35:45,773 - #7 =
INFO  16:35:45,773 - #4 a
INFO  16:35:45,773 - #9 ;
INFO  16:35:45,773 - #13 }
INFO  16:35:45,773 - #4 int
INFO  16:35:45,774 - #4 getp
INFO  16:35:45,774 - #10 (
INFO  16:35:45,774 - #4 int
INFO  16:35:45,774 - #4 idx
INFO  16:35:45,774 - #11 )
INFO  16:35:45,774 - #12 {
INFO  16:35:45,774 - #3 return
INFO  16:35:45,775 - #4 pos
INFO  16:35:45,776 - #4 idx
INFO  16:35:45,776 - #9 ;
INFO  16:35:45,776 - #13 }
INFO  16:35:45,776 - #4 int
INFO  16:35:45,776 - #4 getn
INFO  16:35:45,776 - #10 (
INFO  16:35:45,776 - #4 int
INFO  16:35:45,777 - #4 idx
INFO  16:35:45,777 - #11 )
INFO  16:35:45,777 - #12 {
INFO  16:35:45,777 - #3 return
INFO  16:35:45,777 - #4 neg
INFO  16:35:45,777 - #4 idx
INFO  16:35:45,777 - #9 ;
INFO  16:35:45,777 - #13 }
INFO  16:35:45,777 - #13 }
INFO  16:35:45,777 - #13 }
INFO  16:35:45,778 - #4 Table
INFO  16:35:45,778 - #4 val
INFO  16:35:45,778 - #9 ;
INFO  16:35:45,778 - #12 {
INFO  16:35:45,778 - #15 void
INFO  16:35:45,778 - #4 f
INFO  16:35:45,778 - #10 (
INFO  16:35:45,778 - #4 char
INFO  16:35:45,778 - #4 ch
INFO  16:35:45,778 - #8 ,
INFO  16:35:45,778 - #4 int
INFO  16:35:45,778 - #4 a
INFO  16:35:45,778 - #8 ,
INFO  16:35:45,778 - #4 int
INFO  16:35:45,778 - #4 arg
INFO  16:35:45,779 - #11 )
INFO  16:35:45,779 - #4 int
INFO  16:35:45,779 - #4 x
INFO  16:35:45,779 - #9 ;
INFO  16:35:45,779 - #12 {
INFO  16:35:45,779 - #4 x
INFO  16:35:45,779 - #7 =
INFO  16:35:45,779 - #4 arg
INFO  16:35:45,779 - #9 ;
INFO  16:35:45,779 - #13 }
INFO  16:35:45,779 - #15 void
INFO  16:35:45,779 - #4 main
INFO  16:35:45,779 - #10 (
INFO  16:35:45,780 - #11 )
INFO  16:35:45,780 - #4 int
INFO  16:35:45,780 - #4 x
INFO  16:35:45,780 - #8 ,
INFO  16:35:45,780 - #4 i
INFO  16:35:45,780 - #9 ;
INFO  16:35:45,780 - #4 char
INFO  16:35:45,780 - #4 c
INFO  16:35:45,780 - #9 ;
INFO  16:35:45,780 - #12 {
INFO  16:35:45,780 - #4 val
INFO  16:35:45,780 - #7 =
INFO  16:35:45,780 - #4 new
INFO  16:35:45,780 - #4 Table
INFO  16:35:45,780 - #9 ;
INFO  16:35:45,780 - #4 val
INFO  16:35:45,780 - #4 pos
INFO  16:35:45,781 - #7 =
INFO  16:35:45,781 - #4 new
INFO  16:35:45,781 - #4 int
INFO  16:35:45,781 - #4 size
INFO  16:35:45,781 - #9 ;
INFO  16:35:45,781 - #4 val
INFO  16:35:45,781 - #4 neg
INFO  16:35:45,781 - #7 =
INFO  16:35:45,781 - #4 new
INFO  16:35:45,781 - #4 int
INFO  16:35:45,781 - #4 size
INFO  16:35:45,786 - #9 ;
INFO  16:35:45,786 - #4 i
INFO  16:35:45,786 - #7 =
INFO  16:35:45,786 - #5 0
INFO  16:35:45,786 - #9 ;
INFO  16:35:45,786 - #4 do
INFO  16:35:45,786 - #12 {
INFO  16:35:45,786 - #4 val
INFO  16:35:45,786 - #4 putp
INFO  16:35:45,786 - #10 (
INFO  16:35:45,786 - #5 0
INFO  16:35:45,787 - #8 ,
INFO  16:35:45,787 - #4 i
INFO  16:35:45,787 - #11 )
INFO  16:35:45,787 - #9 ;
INFO  16:35:45,787 - #4 val
INFO  16:35:45,787 - #4 putn
INFO  16:35:45,787 - #10 (
INFO  16:35:45,787 - #5 0
INFO  16:35:45,787 - #8 ,
INFO  16:35:45,787 - #4 i
INFO  16:35:45,787 - #11 )
INFO  16:35:45,787 - #9 ;
INFO  16:35:45,787 - #4 i
INFO  16:35:45,787 - #6 +
INFO  16:35:45,787 - #6 +
INFO  16:35:45,787 - #9 ;
INFO  16:35:45,787 - #13 }
INFO  16:35:45,787 - #4 while
INFO  16:35:45,788 - #10 (
INFO  16:35:45,788 - #4 i
INFO  16:35:45,788 - #4 size
INFO  16:35:45,788 - #11 )
INFO  16:35:45,788 - #9 ;
INFO  16:35:45,788 - #4 f
INFO  16:35:45,788 - #10 (
INFO  16:35:45,788 - #4 c
INFO  16:35:45,788 - #8 ,
INFO  16:35:45,788 - #4 x
INFO  16:35:45,788 - #8 ,
INFO  16:35:45,788 - #4 i
INFO  16:35:45,788 - #11 )
INFO  16:35:45,788 - #9 ;
INFO  16:35:45,788 - #4 read
INFO  16:35:45,788 - #10 (
INFO  16:35:45,789 - #4 x
INFO  16:35:45,789 - #11 )
INFO  16:35:45,789 - #9 ;
INFO  16:35:45,789 - #4 do
INFO  16:35:45,789 - #12 {
INFO  16:35:45,789 - #4 if
INFO  16:35:45,789 - #10 (
INFO  16:35:45,789 - #4 x
INFO  16:35:45,789 - #7 =
INFO  16:35:45,789 - #5 0
INFO  16:35:45,789 - #11 )
INFO  16:35:45,789 - #4 break
INFO  16:35:45,789 - #9 ;
INFO  16:35:45,789 - #4 if
INFO  16:35:45,789 - #10 (
INFO  16:35:45,789 - #5 0
INFO  16:35:45,790 - #7 =
INFO  16:35:45,790 - #4 x
INFO  16:35:45,790 - #4 x
INFO  16:35:45,790 - #4 size
INFO  16:35:45,790 - #11 )
INFO  16:35:45,790 - #12 {
INFO  16:35:45,790 - #4 val
INFO  16:35:45,790 - #4 putp
INFO  16:35:45,790 - #10 (
INFO  16:35:45,790 - #4 val
INFO  16:35:45,790 - #4 getp
INFO  16:35:45,790 - #10 (
INFO  16:35:45,790 - #4 x
INFO  16:35:45,790 - #11 )
INFO  16:35:45,791 - #6 +
INFO  16:35:45,791 - #5 1
INFO  16:35:45,791 - #11 )
INFO  16:35:45,791 - #9 ;
INFO  16:35:45,791 - #13 }
INFO  16:35:45,791 - #4 else
INFO  16:35:45,791 - #4 if
INFO  16:35:45,791 - #10 (
INFO  16:35:45,791 - #4 size
INFO  16:35:45,791 - #4 x
INFO  16:35:45,791 - #4 x
INFO  16:35:45,792 - #5 0
INFO  16:35:45,792 - #11 )
INFO  16:35:45,792 - #12 {
INFO  16:35:45,792 - #4 val
INFO  16:35:45,792 - #4 putn
INFO  16:35:45,792 - #10 (
INFO  16:35:45,792 - #4 val
INFO  16:35:45,792 - #4 getn
INFO  16:35:45,792 - #10 (
INFO  16:35:45,792 - #4 x
INFO  16:35:45,793 - #11 )
INFO  16:35:45,793 - #6 +
INFO  16:35:45,793 - #5 1
INFO  16:35:45,793 - #11 )
INFO  16:35:45,793 - #9 ;
INFO  16:35:45,793 - #13 }
INFO  16:35:45,793 - #4 read
INFO  16:35:45,793 - #10 (
INFO  16:35:45,793 - #4 x
INFO  16:35:45,793 - #11 )
INFO  16:35:45,793 - #9 ;
INFO  16:35:45,793 - #13 }
INFO  16:35:45,793 - #4 while
INFO  16:35:45,793 - #10 (
INFO  16:35:45,793 - #4 true
INFO  16:35:45,793 - #11 )
INFO  16:35:45,793 - #9 ;
INFO  16:35:45,793 - #2 print
INFO  16:35:45,793 - #10 (
INFO  16:35:45,793 - #4 x
INFO  16:35:45,793 - #5 0
INFO  16:35:45,794 - #6 +
INFO  16:35:45,794 - #11 )
INFO  16:35:45,794 - #9 ;
INFO  16:35:45,794 - #13 }
INFO  16:35:45,794 - #13 }
